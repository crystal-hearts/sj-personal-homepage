/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./app/images/bluesky.svg":
/*!********************************!*\
  !*** ./app/images/bluesky.svg ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\nvar SvgBluesky = function SvgBluesky(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 580 580\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M125.722 69.035c66.496 49.92 138.02 151.14 164.28 205.46 26.261-54.316 97.781-155.54 164.279-205.46C502.26 33.014 580 5.143 580 93.83c0 17.712-10.155 148.79-16.11 170.07-20.704 73.984-96.144 92.854-163.25 81.433 117.3 19.964 147.14 86.092 82.697 152.22-122.39 125.59-175.91-31.511-189.63-71.766-2.514-7.38-3.69-10.832-3.707-7.896-.017-2.936-1.193.516-3.707 7.896-13.714 40.255-67.233 197.36-189.63 71.766-64.443-66.128-34.604-132.26 82.697-152.22-67.108 11.42-142.55-7.45-163.25-81.433C10.154 242.618 0 111.54 0 93.83 0 5.143 77.742 33.014 125.72 69.035z\",\n    style: {\n      strokeWidth: 0.999997\n    }\n  }));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (SvgBluesky);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9pbWFnZXMvYmx1ZXNreS5zdmciLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQSxzQkFBc0Isd0VBQXdFLGdCQUFnQixzQkFBc0IsT0FBTyxzQkFBc0Isb0JBQW9CLGdEQUFnRCxXQUFXO0FBQ2hQLDBDQUEwQywwQkFBMEIsbURBQW1ELG9DQUFvQyx5Q0FBeUMsWUFBWSxjQUFjLGtDQUFrQyxxREFBcUQ7QUFDclQsK0NBQStDLDBCQUEwQixZQUFZLHVCQUF1Qiw4QkFBOEIsNkJBQTZCLGVBQWU7QUFDdko7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0RBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLEdBQUcsK0JBQStCLGdEQUFtQjtBQUNyRDtBQUNBLEdBQUcsOEJBQThCLGdEQUFtQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLCtEQUFlLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2ltYWdlcy9ibHVlc2t5LnN2Zz8zMmU0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfZXhjbHVkZWQgPSBbXCJ0aXRsZVwiLCBcInRpdGxlSWRcIl07XG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgcmV0dXJuIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKG4pIHsgZm9yICh2YXIgZSA9IDE7IGUgPCBhcmd1bWVudHMubGVuZ3RoOyBlKyspIHsgdmFyIHQgPSBhcmd1bWVudHNbZV07IGZvciAodmFyIHIgaW4gdCkgKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsIHIpICYmIChuW3JdID0gdFtyXSk7IH0gcmV0dXJuIG47IH0sIF9leHRlbmRzLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhlLCB0KSB7IGlmIChudWxsID09IGUpIHJldHVybiB7fTsgdmFyIG8sIHIsIGkgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShlLCB0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyBmb3IgKHIgPSAwOyByIDwgcy5sZW5ndGg7IHIrKykgbyA9IHNbcl0sIHQuaW5jbHVkZXMobykgfHwge30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLCBvKSAmJiAoaVtvXSA9IGVbb10pOyB9IHJldHVybiBpOyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShyLCBlKSB7IGlmIChudWxsID09IHIpIHJldHVybiB7fTsgdmFyIHQgPSB7fTsgZm9yICh2YXIgbiBpbiByKSBpZiAoe30uaGFzT3duUHJvcGVydHkuY2FsbChyLCBuKSkgeyBpZiAoZS5pbmNsdWRlcyhuKSkgY29udGludWU7IHRbbl0gPSByW25dOyB9IHJldHVybiB0OyB9XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbnZhciBTdmdCbHVlc2t5ID0gZnVuY3Rpb24gU3ZnQmx1ZXNreShfcmVmKSB7XG4gIHZhciB0aXRsZSA9IF9yZWYudGl0bGUsXG4gICAgdGl0bGVJZCA9IF9yZWYudGl0bGVJZCxcbiAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBfZXhjbHVkZWQpO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX2V4dGVuZHMoe1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgdmlld0JveDogXCIwIDAgNTgwIDU4MFwiLFxuICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRpdGxlSWRcbiAgfSwgcHJvcHMpLCB0aXRsZSA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIiwge1xuICAgIGlkOiB0aXRsZUlkXG4gIH0sIHRpdGxlKSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTI1LjcyMiA2OS4wMzVjNjYuNDk2IDQ5LjkyIDEzOC4wMiAxNTEuMTQgMTY0LjI4IDIwNS40NiAyNi4yNjEtNTQuMzE2IDk3Ljc4MS0xNTUuNTQgMTY0LjI3OS0yMDUuNDZDNTAyLjI2IDMzLjAxNCA1ODAgNS4xNDMgNTgwIDkzLjgzYzAgMTcuNzEyLTEwLjE1NSAxNDguNzktMTYuMTEgMTcwLjA3LTIwLjcwNCA3My45ODQtOTYuMTQ0IDkyLjg1NC0xNjMuMjUgODEuNDMzIDExNy4zIDE5Ljk2NCAxNDcuMTQgODYuMDkyIDgyLjY5NyAxNTIuMjItMTIyLjM5IDEyNS41OS0xNzUuOTEtMzEuNTExLTE4OS42My03MS43NjYtMi41MTQtNy4zOC0zLjY5LTEwLjgzMi0zLjcwNy03Ljg5Ni0uMDE3LTIuOTM2LTEuMTkzLjUxNi0zLjcwNyA3Ljg5Ni0xMy43MTQgNDAuMjU1LTY3LjIzMyAxOTcuMzYtMTg5LjYzIDcxLjc2Ni02NC40NDMtNjYuMTI4LTM0LjYwNC0xMzIuMjYgODIuNjk3LTE1Mi4yMi02Ny4xMDggMTEuNDItMTQyLjU1LTcuNDUtMTYzLjI1LTgxLjQzM0MxMC4xNTQgMjQyLjYxOCAwIDExMS41NCAwIDkzLjgzIDAgNS4xNDMgNzcuNzQyIDMzLjAxNCAxMjUuNzIgNjkuMDM1elwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBzdHJva2VXaWR0aDogMC45OTk5OTdcbiAgICB9XG4gIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBTdmdCbHVlc2t5OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/images/bluesky.svg\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/images/close-svgrepo-com.svg":
/*!******************************************!*\
  !*** ./app/images/close-svgrepo-com.svg ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\nvar SvgCloseSvgrepoCom = function SvgCloseSvgrepoCom(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 -0.01 512.023 512.023\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    \"data-name\": \"18 Close\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M74.978 437.014c-99.966-99.97-99.966-262.066 0-362.037 100-99.97 262.067-99.97 362.068 0 99.97 99.971 99.97 262.067 0 362.037-100.001 99.987-262.066 99.987-362.068 0m316.817-316.786c-75-74.985-196.565-74.985-271.535 0-75 74.985-75 196.55 0 271.535 74.97 74.986 196.534 74.986 271.535 0 74.971-74.986 74.971-196.55 0-271.535m-203.659 248.91-45.251-45.266 67.876-67.877-67.876-67.876 45.251-45.267 67.876 67.892 67.877-67.892 45.25 45.267-67.876 67.876 67.876 67.877-45.25 45.266-67.877-67.892Z\",\n    \"data-name\": \"Path 25\"\n  }))));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (SvgCloseSvgrepoCom);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9pbWFnZXMvY2xvc2Utc3ZncmVwby1jb20uc3ZnIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQSxzQkFBc0Isd0VBQXdFLGdCQUFnQixzQkFBc0IsT0FBTyxzQkFBc0Isb0JBQW9CLGdEQUFnRCxXQUFXO0FBQ2hQLDBDQUEwQywwQkFBMEIsbURBQW1ELG9DQUFvQyx5Q0FBeUMsWUFBWSxjQUFjLGtDQUFrQyxxREFBcUQ7QUFDclQsK0NBQStDLDBCQUEwQixZQUFZLHVCQUF1Qiw4QkFBOEIsNkJBQTZCLGVBQWU7QUFDdko7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0RBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLEdBQUcsK0JBQStCLGdEQUFtQjtBQUNyRDtBQUNBLEdBQUcsMENBQTBDLGdEQUFtQjtBQUNoRTtBQUNBLEdBQUcsZUFBZSxnREFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsK0RBQWUsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9pbWFnZXMvY2xvc2Utc3ZncmVwby1jb20uc3ZnP2M1ZWIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9nO1xudmFyIF9leGNsdWRlZCA9IFtcInRpdGxlXCIsIFwidGl0bGVJZFwiXTtcbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyByZXR1cm4gX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAobikgeyBmb3IgKHZhciBlID0gMTsgZSA8IGFyZ3VtZW50cy5sZW5ndGg7IGUrKykgeyB2YXIgdCA9IGFyZ3VtZW50c1tlXTsgZm9yICh2YXIgciBpbiB0KSAoe30pLmhhc093blByb3BlcnR5LmNhbGwodCwgcikgJiYgKG5bcl0gPSB0W3JdKTsgfSByZXR1cm4gbjsgfSwgX2V4dGVuZHMuYXBwbHkobnVsbCwgYXJndW1lbnRzKTsgfVxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKGUsIHQpIHsgaWYgKG51bGwgPT0gZSkgcmV0dXJuIHt9OyB2YXIgbywgciwgaSA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKGUsIHQpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IGZvciAociA9IDA7IHIgPCBzLmxlbmd0aDsgcisrKSBvID0gc1tyXSwgdC5pbmNsdWRlcyhvKSB8fCB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsIG8pICYmIChpW29dID0gZVtvXSk7IH0gcmV0dXJuIGk7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHIsIGUpIHsgaWYgKG51bGwgPT0gcikgcmV0dXJuIHt9OyB2YXIgdCA9IHt9OyBmb3IgKHZhciBuIGluIHIpIGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsIG4pKSB7IGlmIChlLmluY2x1ZGVzKG4pKSBjb250aW51ZTsgdFtuXSA9IHJbbl07IH0gcmV0dXJuIHQ7IH1cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xudmFyIFN2Z0Nsb3NlU3ZncmVwb0NvbSA9IGZ1bmN0aW9uIFN2Z0Nsb3NlU3ZncmVwb0NvbShfcmVmKSB7XG4gIHZhciB0aXRsZSA9IF9yZWYudGl0bGUsXG4gICAgdGl0bGVJZCA9IF9yZWYudGl0bGVJZCxcbiAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBfZXhjbHVkZWQpO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX2V4dGVuZHMoe1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgdmlld0JveDogXCIwIC0wLjAxIDUxMi4wMjMgNTEyLjAyM1wiLFxuICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRpdGxlSWRcbiAgfSwgcHJvcHMpLCB0aXRsZSA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIiwge1xuICAgIGlkOiB0aXRsZUlkXG4gIH0sIHRpdGxlKSA6IG51bGwsIF9nIHx8IChfZyA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZ1wiLCB7XG4gICAgXCJkYXRhLW5hbWVcIjogXCIxOCBDbG9zZVwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZmlsbFJ1bGU6IFwiZXZlbm9kZFwiLFxuICAgIGQ6IFwiTTc0Ljk3OCA0MzcuMDE0Yy05OS45NjYtOTkuOTctOTkuOTY2LTI2Mi4wNjYgMC0zNjIuMDM3IDEwMC05OS45NyAyNjIuMDY3LTk5Ljk3IDM2Mi4wNjggMCA5OS45NyA5OS45NzEgOTkuOTcgMjYyLjA2NyAwIDM2Mi4wMzctMTAwLjAwMSA5OS45ODctMjYyLjA2NiA5OS45ODctMzYyLjA2OCAwbTMxNi44MTctMzE2Ljc4NmMtNzUtNzQuOTg1LTE5Ni41NjUtNzQuOTg1LTI3MS41MzUgMC03NSA3NC45ODUtNzUgMTk2LjU1IDAgMjcxLjUzNSA3NC45NyA3NC45ODYgMTk2LjUzNCA3NC45ODYgMjcxLjUzNSAwIDc0Ljk3MS03NC45ODYgNzQuOTcxLTE5Ni41NSAwLTI3MS41MzVtLTIwMy42NTkgMjQ4LjkxLTQ1LjI1MS00NS4yNjYgNjcuODc2LTY3Ljg3Ny02Ny44NzYtNjcuODc2IDQ1LjI1MS00NS4yNjcgNjcuODc2IDY3Ljg5MiA2Ny44NzctNjcuODkyIDQ1LjI1IDQ1LjI2Ny02Ny44NzYgNjcuODc2IDY3Ljg3NiA2Ny44NzctNDUuMjUgNDUuMjY2LTY3Ljg3Ny02Ny44OTJaXCIsXG4gICAgXCJkYXRhLW5hbWVcIjogXCJQYXRoIDI1XCJcbiAgfSkpKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgU3ZnQ2xvc2VTdmdyZXBvQ29tOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/images/close-svgrepo-com.svg\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/images/gear-svgrepo-com.svg":
/*!*****************************************!*\
  !*** ./app/images/gear-svgrepo-com.svg ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\nvar SvgGearSvgrepoCom = function SvgGearSvgrepoCom(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlSpace: \"preserve\",\n    viewBox: \"0 0 45.973 45.973\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M43.454 18.443h-2.437a18.1 18.1 0 0 0-2.082-4.933l1.752-1.756a2.5 2.5 0 0 0 .733-1.774c0-.669-.262-1.301-.733-1.773l-2.92-2.917c-.947-.948-2.602-.947-3.545-.001l-1.826 1.815a18.1 18.1 0 0 0-4.867-1.976V2.52c0-1.383-1.105-2.52-2.488-2.52h-4.128c-1.383 0-2.471 1.137-2.471 2.52v2.607a18.2 18.2 0 0 0-4.878 1.977l-1.825-1.815c-.946-.948-2.602-.947-3.551-.001L5.27 8.205a2.52 2.52 0 0 0-.735 1.773c0 .669.259 1.299.733 1.772l1.752 1.76a18.1 18.1 0 0 0-2.081 4.933H2.501A2.49 2.49 0 0 0 0 20.935v4.125c0 1.384 1.117 2.471 2.501 2.471h2.438a18.2 18.2 0 0 0 2.079 4.943l-1.752 1.763c-.474.473-.734 1.106-.734 1.776s.261 1.303.734 1.776l2.92 2.919c.474.473 1.103.733 1.772.733s1.299-.261 1.773-.733l1.833-1.816a18.3 18.3 0 0 0 4.878 1.978v2.604c0 1.383 1.088 2.498 2.471 2.498h4.128a2.485 2.485 0 0 0 2.488-2.498v-2.605a18.2 18.2 0 0 0 4.869-1.977l1.817 1.812a2.5 2.5 0 0 0 1.775.735c.67 0 1.301-.261 1.774-.733l2.92-2.917a2.5 2.5 0 0 0 .734-1.772c0-.67-.262-1.299-.734-1.773l-1.75-1.77a18.3 18.3 0 0 0 2.08-4.943h2.438c1.383 0 2.52-1.087 2.52-2.471v-4.125c.001-1.38-1.135-2.492-2.518-2.492M22.976 30.85c-4.378 0-7.928-3.517-7.928-7.852 0-4.338 3.55-7.85 7.928-7.85s7.931 3.512 7.931 7.85c-.001 4.336-3.552 7.852-7.931 7.852\"\n  })));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (SvgGearSvgrepoCom);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9pbWFnZXMvZ2Vhci1zdmdyZXBvLWNvbS5zdmciLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBLHNCQUFzQix3RUFBd0UsZ0JBQWdCLHNCQUFzQixPQUFPLHNCQUFzQixvQkFBb0IsZ0RBQWdELFdBQVc7QUFDaFAsMENBQTBDLDBCQUEwQixtREFBbUQsb0NBQW9DLHlDQUF5QyxZQUFZLGNBQWMsa0NBQWtDLHFEQUFxRDtBQUNyVCwrQ0FBK0MsMEJBQTBCLFlBQVksdUJBQXVCLDhCQUE4Qiw2QkFBNkIsZUFBZTtBQUN2SjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnREFBbUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLCtCQUErQixnREFBbUI7QUFDckQ7QUFDQSxHQUFHLGdEQUFnRCxnREFBbUI7QUFDdEU7QUFDQSxHQUFHO0FBQ0g7QUFDQSwrREFBZSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2ltYWdlcy9nZWFyLXN2Z3JlcG8tY29tLnN2Zz80NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfcGF0aDtcbnZhciBfZXhjbHVkZWQgPSBbXCJ0aXRsZVwiLCBcInRpdGxlSWRcIl07XG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgcmV0dXJuIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKG4pIHsgZm9yICh2YXIgZSA9IDE7IGUgPCBhcmd1bWVudHMubGVuZ3RoOyBlKyspIHsgdmFyIHQgPSBhcmd1bWVudHNbZV07IGZvciAodmFyIHIgaW4gdCkgKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsIHIpICYmIChuW3JdID0gdFtyXSk7IH0gcmV0dXJuIG47IH0sIF9leHRlbmRzLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhlLCB0KSB7IGlmIChudWxsID09IGUpIHJldHVybiB7fTsgdmFyIG8sIHIsIGkgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShlLCB0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyBmb3IgKHIgPSAwOyByIDwgcy5sZW5ndGg7IHIrKykgbyA9IHNbcl0sIHQuaW5jbHVkZXMobykgfHwge30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLCBvKSAmJiAoaVtvXSA9IGVbb10pOyB9IHJldHVybiBpOyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShyLCBlKSB7IGlmIChudWxsID09IHIpIHJldHVybiB7fTsgdmFyIHQgPSB7fTsgZm9yICh2YXIgbiBpbiByKSBpZiAoe30uaGFzT3duUHJvcGVydHkuY2FsbChyLCBuKSkgeyBpZiAoZS5pbmNsdWRlcyhuKSkgY29udGludWU7IHRbbl0gPSByW25dOyB9IHJldHVybiB0OyB9XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbnZhciBTdmdHZWFyU3ZncmVwb0NvbSA9IGZ1bmN0aW9uIFN2Z0dlYXJTdmdyZXBvQ29tKF9yZWYpIHtcbiAgdmFyIHRpdGxlID0gX3JlZi50aXRsZSxcbiAgICB0aXRsZUlkID0gX3JlZi50aXRsZUlkLFxuICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIF9leGNsdWRlZCk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfZXh0ZW5kcyh7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB4bWxTcGFjZTogXCJwcmVzZXJ2ZVwiLFxuICAgIHZpZXdCb3g6IFwiMCAwIDQ1Ljk3MyA0NS45NzNcIixcbiAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aXRsZUlkXG4gIH0sIHByb3BzKSwgdGl0bGUgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInRpdGxlXCIsIHtcbiAgICBpZDogdGl0bGVJZFxuICB9LCB0aXRsZSkgOiBudWxsLCBfcGF0aCB8fCAoX3BhdGggPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTQzLjQ1NCAxOC40NDNoLTIuNDM3YTE4LjEgMTguMSAwIDAgMC0yLjA4Mi00LjkzM2wxLjc1Mi0xLjc1NmEyLjUgMi41IDAgMCAwIC43MzMtMS43NzRjMC0uNjY5LS4yNjItMS4zMDEtLjczMy0xLjc3M2wtMi45Mi0yLjkxN2MtLjk0Ny0uOTQ4LTIuNjAyLS45NDctMy41NDUtLjAwMWwtMS44MjYgMS44MTVhMTguMSAxOC4xIDAgMCAwLTQuODY3LTEuOTc2VjIuNTJjMC0xLjM4My0xLjEwNS0yLjUyLTIuNDg4LTIuNTJoLTQuMTI4Yy0xLjM4MyAwLTIuNDcxIDEuMTM3LTIuNDcxIDIuNTJ2Mi42MDdhMTguMiAxOC4yIDAgMCAwLTQuODc4IDEuOTc3bC0xLjgyNS0xLjgxNWMtLjk0Ni0uOTQ4LTIuNjAyLS45NDctMy41NTEtLjAwMUw1LjI3IDguMjA1YTIuNTIgMi41MiAwIDAgMC0uNzM1IDEuNzczYzAgLjY2OS4yNTkgMS4yOTkuNzMzIDEuNzcybDEuNzUyIDEuNzZhMTguMSAxOC4xIDAgMCAwLTIuMDgxIDQuOTMzSDIuNTAxQTIuNDkgMi40OSAwIDAgMCAwIDIwLjkzNXY0LjEyNWMwIDEuMzg0IDEuMTE3IDIuNDcxIDIuNTAxIDIuNDcxaDIuNDM4YTE4LjIgMTguMiAwIDAgMCAyLjA3OSA0Ljk0M2wtMS43NTIgMS43NjNjLS40NzQuNDczLS43MzQgMS4xMDYtLjczNCAxLjc3NnMuMjYxIDEuMzAzLjczNCAxLjc3NmwyLjkyIDIuOTE5Yy40NzQuNDczIDEuMTAzLjczMyAxLjc3Mi43MzNzMS4yOTktLjI2MSAxLjc3My0uNzMzbDEuODMzLTEuODE2YTE4LjMgMTguMyAwIDAgMCA0Ljg3OCAxLjk3OHYyLjYwNGMwIDEuMzgzIDEuMDg4IDIuNDk4IDIuNDcxIDIuNDk4aDQuMTI4YTIuNDg1IDIuNDg1IDAgMCAwIDIuNDg4LTIuNDk4di0yLjYwNWExOC4yIDE4LjIgMCAwIDAgNC44NjktMS45NzdsMS44MTcgMS44MTJhMi41IDIuNSAwIDAgMCAxLjc3NS43MzVjLjY3IDAgMS4zMDEtLjI2MSAxLjc3NC0uNzMzbDIuOTItMi45MTdhMi41IDIuNSAwIDAgMCAuNzM0LTEuNzcyYzAtLjY3LS4yNjItMS4yOTktLjczNC0xLjc3M2wtMS43NS0xLjc3YTE4LjMgMTguMyAwIDAgMCAyLjA4LTQuOTQzaDIuNDM4YzEuMzgzIDAgMi41Mi0xLjA4NyAyLjUyLTIuNDcxdi00LjEyNWMuMDAxLTEuMzgtMS4xMzUtMi40OTItMi41MTgtMi40OTJNMjIuOTc2IDMwLjg1Yy00LjM3OCAwLTcuOTI4LTMuNTE3LTcuOTI4LTcuODUyIDAtNC4zMzggMy41NS03Ljg1IDcuOTI4LTcuODVzNy45MzEgMy41MTIgNy45MzEgNy44NWMtLjAwMSA0LjMzNi0zLjU1MiA3Ljg1Mi03LjkzMSA3Ljg1MlwiXG4gIH0pKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgU3ZnR2VhclN2Z3JlcG9Db207Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/images/gear-svgrepo-com.svg\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/images/github.svg":
/*!*******************************!*\
  !*** ./app/images/github.svg ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 98 96\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a47 47 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0\"\n  })));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (SvgGithub);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9pbWFnZXMvZ2l0aHViLnN2ZyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0Esc0JBQXNCLHdFQUF3RSxnQkFBZ0Isc0JBQXNCLE9BQU8sc0JBQXNCLG9CQUFvQixnREFBZ0QsV0FBVztBQUNoUCwwQ0FBMEMsMEJBQTBCLG1EQUFtRCxvQ0FBb0MseUNBQXlDLFlBQVksY0FBYyxrQ0FBa0MscURBQXFEO0FBQ3JULCtDQUErQywwQkFBMEIsWUFBWSx1QkFBdUIsOEJBQThCLDZCQUE2QixlQUFlO0FBQ3ZKO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGdEQUFtQjtBQUN6QztBQUNBO0FBQ0E7QUFDQSxHQUFHLCtCQUErQixnREFBbUI7QUFDckQ7QUFDQSxHQUFHLGdEQUFnRCxnREFBbUI7QUFDdEU7QUFDQSxHQUFHO0FBQ0g7QUFDQSwrREFBZSxTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9pbWFnZXMvZ2l0aHViLnN2Zz85YTFlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfcGF0aDtcbnZhciBfZXhjbHVkZWQgPSBbXCJ0aXRsZVwiLCBcInRpdGxlSWRcIl07XG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgcmV0dXJuIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKG4pIHsgZm9yICh2YXIgZSA9IDE7IGUgPCBhcmd1bWVudHMubGVuZ3RoOyBlKyspIHsgdmFyIHQgPSBhcmd1bWVudHNbZV07IGZvciAodmFyIHIgaW4gdCkgKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsIHIpICYmIChuW3JdID0gdFtyXSk7IH0gcmV0dXJuIG47IH0sIF9leHRlbmRzLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhlLCB0KSB7IGlmIChudWxsID09IGUpIHJldHVybiB7fTsgdmFyIG8sIHIsIGkgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShlLCB0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyBmb3IgKHIgPSAwOyByIDwgcy5sZW5ndGg7IHIrKykgbyA9IHNbcl0sIHQuaW5jbHVkZXMobykgfHwge30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLCBvKSAmJiAoaVtvXSA9IGVbb10pOyB9IHJldHVybiBpOyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShyLCBlKSB7IGlmIChudWxsID09IHIpIHJldHVybiB7fTsgdmFyIHQgPSB7fTsgZm9yICh2YXIgbiBpbiByKSBpZiAoe30uaGFzT3duUHJvcGVydHkuY2FsbChyLCBuKSkgeyBpZiAoZS5pbmNsdWRlcyhuKSkgY29udGludWU7IHRbbl0gPSByW25dOyB9IHJldHVybiB0OyB9XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbnZhciBTdmdHaXRodWIgPSBmdW5jdGlvbiBTdmdHaXRodWIoX3JlZikge1xuICB2YXIgdGl0bGUgPSBfcmVmLnRpdGxlLFxuICAgIHRpdGxlSWQgPSBfcmVmLnRpdGxlSWQsXG4gICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgX2V4Y2x1ZGVkKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9leHRlbmRzKHtcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgIHZpZXdCb3g6IFwiMCAwIDk4IDk2XCIsXG4gICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGl0bGVJZFxuICB9LCBwcm9wcyksIHRpdGxlID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiLCB7XG4gICAgaWQ6IHRpdGxlSWRcbiAgfSwgdGl0bGUpIDogbnVsbCwgX3BhdGggfHwgKF9wYXRoID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk00OC44NTQgMEMyMS44MzkgMCAwIDIyIDAgNDkuMjE3YzAgMjEuNzU2IDEzLjk5MyA0MC4xNzIgMzMuNDA1IDQ2LjY5IDIuNDI3LjQ5IDMuMzE2LTEuMDU5IDMuMzE2LTIuMzYyIDAtMS4xNDEtLjA4LTUuMDUyLS4wOC05LjEyNy0xMy41OSAyLjkzNC0xNi40Mi01Ljg2Ny0xNi40Mi01Ljg2Ny0yLjE4NC01LjcwNC01LjQyLTcuMTctNS40Mi03LjE3LTQuNDQ4LTMuMDE1LjMyNC0zLjAxNS4zMjQtMy4wMTUgNC45MzQuMzI2IDcuNTIzIDUuMDUyIDcuNTIzIDUuMDUyIDQuMzY3IDcuNDk2IDExLjQwNCA1LjM3OCAxNC4yMzUgNC4wNzQuNDA0LTMuMTc4IDEuNjk5LTUuMzc4IDMuMDc0LTYuNi0xMC44MzktMS4xNDEtMjIuMjQzLTUuMzc4LTIyLjI0My0yNC4yODMgMC01LjM3OCAxLjk0LTkuNzc4IDUuMDE0LTEzLjItLjQ4NS0xLjIyMi0yLjE4NC02LjI3NS40ODYtMTMuMDM4IDAgMCA0LjEyNS0xLjMwNCAxMy40MjYgNS4wNTJhNDcgNDcgMCAwIDEgMTIuMjE0LTEuNjNjNC4xMjUgMCA4LjMzLjU3MSAxMi4yMTMgMS42MyA5LjMwMi02LjM1NiAxMy40MjctNS4wNTIgMTMuNDI3LTUuMDUyIDIuNjcgNi43NjMuOTcgMTEuODE2LjQ4NSAxMy4wMzggMy4xNTUgMy40MjIgNS4wMTUgNy44MjIgNS4wMTUgMTMuMiAwIDE4LjkwNS0xMS40MDQgMjMuMDYtMjIuMzI0IDI0LjI4MyAxLjc4IDEuNTQ4IDMuMzE2IDQuNDgxIDMuMzE2IDkuMTI2IDAgNi42LS4wOCAxMS44OTctLjA4IDEzLjUyNiAwIDEuMzA0Ljg5IDIuODUzIDMuMzE2IDIuMzY0IDE5LjQxMi02LjUyIDMzLjQwNS0yNC45MzUgMzMuNDA1LTQ2LjY5MUM5Ny43MDcgMjIgNzUuNzg4IDAgNDguODU0IDBcIlxuICB9KSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFN2Z0dpdGh1YjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/images/github.svg\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/images/linkedin.svg":
/*!*********************************!*\
  !*** ./app/images/linkedin.svg ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\nvar SvgLinkedin = function SvgLinkedin(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 72 72\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M8 0a8 8 0 0 0-8 8v56a8 8 0 0 0 8 8h56a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8zm8.35 10c3.507 0 6.347 2.864 6.347 6.396s-2.84 6.399-6.347 6.399S10 19.929 10 16.396 12.842 10 16.35 10m33.033 16.273C56.736 26.273 62 30.764 62 40.051V62H51.316V43.803c0-4.99-1.896-7.778-5.845-7.778-4.296 0-6.541 2.902-6.541 7.778V62H28.633V27.334H38.93v4.668s3.096-5.729 10.453-5.729m-38.35 1.061H21.77V62H11.033z\"\n  })));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (SvgLinkedin);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9pbWFnZXMvbGlua2VkaW4uc3ZnIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQSxzQkFBc0Isd0VBQXdFLGdCQUFnQixzQkFBc0IsT0FBTyxzQkFBc0Isb0JBQW9CLGdEQUFnRCxXQUFXO0FBQ2hQLDBDQUEwQywwQkFBMEIsbURBQW1ELG9DQUFvQyx5Q0FBeUMsWUFBWSxjQUFjLGtDQUFrQyxxREFBcUQ7QUFDclQsK0NBQStDLDBCQUEwQixZQUFZLHVCQUF1Qiw4QkFBOEIsNkJBQTZCLGVBQWU7QUFDdko7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0RBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLEdBQUcsK0JBQStCLGdEQUFtQjtBQUNyRDtBQUNBLEdBQUcsZ0RBQWdELGdEQUFtQjtBQUN0RTtBQUNBLEdBQUc7QUFDSDtBQUNBLCtEQUFlLFdBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2ltYWdlcy9saW5rZWRpbi5zdmc/ODllZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX3BhdGg7XG52YXIgX2V4Y2x1ZGVkID0gW1widGl0bGVcIiwgXCJ0aXRsZUlkXCJdO1xuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IHJldHVybiBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gPyBPYmplY3QuYXNzaWduLmJpbmQoKSA6IGZ1bmN0aW9uIChuKSB7IGZvciAodmFyIGUgPSAxOyBlIDwgYXJndW1lbnRzLmxlbmd0aDsgZSsrKSB7IHZhciB0ID0gYXJndW1lbnRzW2VdOyBmb3IgKHZhciByIGluIHQpICh7fSkuaGFzT3duUHJvcGVydHkuY2FsbCh0LCByKSAmJiAobltyXSA9IHRbcl0pOyB9IHJldHVybiBuOyB9LCBfZXh0ZW5kcy5hcHBseShudWxsLCBhcmd1bWVudHMpOyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoZSwgdCkgeyBpZiAobnVsbCA9PSBlKSByZXR1cm4ge307IHZhciBvLCByLCBpID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoZSwgdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgZm9yIChyID0gMDsgciA8IHMubGVuZ3RoOyByKyspIG8gPSBzW3JdLCB0LmluY2x1ZGVzKG8pIHx8IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSwgbykgJiYgKGlbb10gPSBlW29dKTsgfSByZXR1cm4gaTsgfVxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UociwgZSkgeyBpZiAobnVsbCA9PSByKSByZXR1cm4ge307IHZhciB0ID0ge307IGZvciAodmFyIG4gaW4gcikgaWYgKHt9Lmhhc093blByb3BlcnR5LmNhbGwociwgbikpIHsgaWYgKGUuaW5jbHVkZXMobikpIGNvbnRpbnVlOyB0W25dID0gcltuXTsgfSByZXR1cm4gdDsgfVxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG52YXIgU3ZnTGlua2VkaW4gPSBmdW5jdGlvbiBTdmdMaW5rZWRpbihfcmVmKSB7XG4gIHZhciB0aXRsZSA9IF9yZWYudGl0bGUsXG4gICAgdGl0bGVJZCA9IF9yZWYudGl0bGVJZCxcbiAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBfZXhjbHVkZWQpO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX2V4dGVuZHMoe1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgdmlld0JveDogXCIwIDAgNzIgNzJcIixcbiAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aXRsZUlkXG4gIH0sIHByb3BzKSwgdGl0bGUgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInRpdGxlXCIsIHtcbiAgICBpZDogdGl0bGVJZFxuICB9LCB0aXRsZSkgOiBudWxsLCBfcGF0aCB8fCAoX3BhdGggPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTggMGE4IDggMCAwIDAtOCA4djU2YTggOCAwIDAgMCA4IDhoNTZhOCA4IDAgMCAwIDgtOFY4YTggOCAwIDAgMC04LTh6bTguMzUgMTBjMy41MDcgMCA2LjM0NyAyLjg2NCA2LjM0NyA2LjM5NnMtMi44NCA2LjM5OS02LjM0NyA2LjM5OVMxMCAxOS45MjkgMTAgMTYuMzk2IDEyLjg0MiAxMCAxNi4zNSAxMG0zMy4wMzMgMTYuMjczQzU2LjczNiAyNi4yNzMgNjIgMzAuNzY0IDYyIDQwLjA1MVY2Mkg1MS4zMTZWNDMuODAzYzAtNC45OS0xLjg5Ni03Ljc3OC01Ljg0NS03Ljc3OC00LjI5NiAwLTYuNTQxIDIuOTAyLTYuNTQxIDcuNzc4VjYySDI4LjYzM1YyNy4zMzRIMzguOTN2NC42NjhzMy4wOTYtNS43MjkgMTAuNDUzLTUuNzI5bS0zOC4zNSAxLjA2MUgyMS43N1Y2MkgxMS4wMzN6XCJcbiAgfSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBTdmdMaW5rZWRpbjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/images/linkedin.svg\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/images/logo-desktop.svg":
/*!*************************************!*\
  !*** ./app/images/logo-desktop.svg ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\nvar SvgLogoDesktop = function SvgLogoDesktop(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlSpace: \"preserve\",\n    className: \"logo-desktop_svg__logo-svg\",\n    viewBox: \"0 0 229.863 32.086\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g1\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M57.755 173.793q-3.311 0-5.293 1.394-1.983 1.372-1.983 3.617 0 .23.021.447v.004a4 4 0 0 0 .056.389l.005.029a4 4 0 0 0 .093.376l.004.013a3.6 3.6 0 0 0 .504 1.032l.008.012q.113.159.245.308l.008.01q.13.147.277.284l2.65 2.65H50.5q-.5 0-.5.48.001.181.02.358l.005.063a3.4 3.4 0 0 0 .158.703l.002.006.007.023a3 3 0 0 0 .155.37q.079.161.174.316l.013.02q.096.154.21.302l.016.022q.13.166.283.325l.003.004q.138.147.296.288l3.992 3.992q.434.49 1.07.92 2.026 1.329 5.664 1.329t5.839-1.395q2.2-1.395 2.2-3.638 0-1.97-1.176-3.067l-2.596-2.597h2.727q.239 0 .37-.13a.44.44 0 0 0 .152-.349q-.001-1.178-1.094-2.263h.002l-4.406-4.405v.002a7.3 7.3 0 0 0-.95-.784q-2.048-1.46-5.38-1.46zm6.986 3.05.021.034zm.275.556.021.057zm.144.575zm-8.685.309zm-.06.662zm5.746 1.193zm-10.066 1.895.035.025zm.225.157.033.02zm.23.142.047.028zm.395.213q.14.069.286.131-.148-.064-.286-.13zm.63.273zm.609.21q.125.04.255.078-.129-.038-.255-.077zm.683.187q.123.03.25.06-.127-.029-.25-.06zm.746.157q.122.024.248.046-.126-.022-.248-.046zm3.217.498zm.93 1.005zm-8.139 2.994.07.054z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-44.5 -167.836)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M57.755 173.793q-3.31 0-5.294 1.394-1.982 1.372-1.982 3.617 0 1.773 1.221 2.903l2.65 2.651H50.5q-.5 0-.5.48 0 1.604 1.341 2.799h.001l3.992 3.992q.434.49 1.07.92 2.026 1.33 5.664 1.33c3.638 0 4.372-.466 5.838-1.395q2.2-1.394 2.2-3.638 0-1.97-1.175-3.067l-2.597-2.597h2.727q.24 0 .37-.13a.44.44 0 0 0 .153-.35q0-1.177-1.095-2.262h.002l-4.405-4.406v.002a7.3 7.3 0 0 0-.95-.784q-2.048-1.46-5.38-1.459zm6.986 3.05.02.034zm.163.295q.008.015.015.032zm.113.264.018.049q-.008-.025-.018-.05zm-12.923 4.63.038.028zm.229.159.027.018zm.24.149.028.016zm.39.209q.133.064.274.126a9 9 0 0 1-.275-.126zm1.231.48q.125.04.254.077-.13-.038-.254-.077m.689.187q.119.03.242.059-.123-.03-.242-.059m.736.155c.085.016.167.033.254.047-.087-.014-.169-.031-.254-.047m-3.989 4.497.073.057z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-44.5 -167.836)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M57.755 173.793q-3.31 0-5.294 1.394-1.982 1.372-1.982 3.617 0 3.986 6.165 4.726 1.94.219 2.593.458.653.218.653.61 0 .632-2.07.632-1.502 0-2.113-.589-.283-.282-.74-.283H50.5q-.501 0-.501.48 0 1.96 2.004 3.311 2.025 1.329 5.664 1.329t5.838-1.394q2.2-1.395 2.2-3.638 0-2.245-1.524-3.355-1.504-1.133-5.076-1.547-1.7-.195-2.266-.37-.566-.196-.566-.523 0-.61 1.46-.61 1.045 0 1.568.48a.96.96 0 0 0 .675.26h4.684q.24 0 .37-.13a.44.44 0 0 0 .153-.349q0-1.611-2.048-3.05-2.048-1.46-5.38-1.459\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-44.5 -167.836)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g2\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M71.875 174.01q-.785 0-.98.72l-4.75 13.92a.7.7 0 0 0-.021.197q0 .128.126.278l.004.005.002.002 4.398 4.398a.52.52 0 0 0 .348.13h4.118q.696 0 .98-.74l.545-1.525h4.154l2.014 2.014v-.004q.265.254.672.255h4.118q.195 0 .326-.13.153-.153.153-.283a.7.7 0 0 0-.022-.197l-4.75-13.92a1 1 0 0 0-.28-.484h.005l-4.35-4.35-.017-.016-.038-.038v.005a.8.8 0 0 0-.295-.172l-.011-.004a1 1 0 0 0-.167-.04l-.02-.004a2 2 0 0 0-.206-.015zm-5.625 15.115h-.001l.002.002zm12.541-14.681zm-.609 14.249zm.118.185zm.102.116zm.117.099zm.125.073zm.135.051zm.15.032zm-8.275 3.397.021.022-.021.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-44.5 -167.836)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M71.875 174.01q-.785 0-.98.72l-4.75 13.92a.7.7 0 0 0-.02.196q-.001.131.13.284l4.398 4.4a.52.52 0 0 0 .35.13h4.116q.698 0 .98-.74l.545-1.525H80.8l2.014 2.013v-.004q.265.255.672.256h4.117q.197 0 .327-.13.153-.153.152-.284a.7.7 0 0 0-.021-.196l-4.75-13.92a1 1 0 0 0-.28-.484h.005l-4.35-4.35-.017-.017-.038-.038v.005q-.254-.234-.7-.235zm6.916.434q.02.033.037.069l-.037-.07zm-3.888 3.772 1.547 4.53h-.001zm2.657 8.778.545 1.525zm-11.311 2.13.005.005zm4.404 3.522.022.022-.022.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-44.5 -167.836)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M71.875 174.01q-.785 0-.98.72l-4.75 13.92a.7.7 0 0 0-.021.196q0 .13.13.284a.52.52 0 0 0 .349.13h4.117q.697 0 .98-.74l.545-1.526h5.315l.545 1.525q.283.74.98.74h4.118q.196.001.326-.13.153-.152.153-.283a.7.7 0 0 0-.022-.196l-4.749-13.92q-.195-.72-.98-.72zm3.028 4.205 1.546 4.531h-3.093z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-44.5 -167.836)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g3\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M86.137 174.01a.57.57 0 0 0-.414.175.56.56 0 0 0-.174.414v14.073q0 .24.174.414.024.021.049.04-.024-.017-.046-.037l4.397 4.398a.56.56 0 0 0 .414.174h4.706q.24 0 .414-.174a.56.56 0 0 0 .174-.414v-3.619l3.959 3.96v-.005q.261.25.703.252h4.945q.196 0 .327-.13.152-.153.153-.306a.54.54 0 0 0-.044-.24l-2.68-5.01q2.288-1.329 2.288-4.291 0-2.1-1.29-3.44h.002l-.038-.039-.02-.02-4.347-4.346v.003a5 5 0 0 0-.45-.415q-1.743-1.416-4.728-1.416zm14.211 2.542.009.013zm.222.39.013.028zm.325.86.006.019-.006-.02zm-6.74.26zm6.839.188.009.056-.01-.056zm.064.491.006.078zm.023.542zm-.016.46zm-6.17.324zm6.14.016zm-.047.318zm-.063.311zm-.08.306q-.025.077-.051.152.026-.075.05-.152zm-.094.28zm-.29.624-.08.14zm-.154.252zm-.162.228zm-.18.222zm-.202.214zm-.205.19a4.6 4.6 0 0 1-.763.547 5 5 0 0 0 .763-.546zm-8.127 1.374h1.83zm-.174 4.684zm-5.236.163a1 1 0 0 0 .116.011h4.706-4.706a.6.6 0 0 1-.116-.01z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-44.5 -167.836)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M86.137 174.01a.57.57 0 0 0-.414.175.56.56 0 0 0-.174.414v14.073q0 .24.174.414l.003.003 4.397 4.397a.56.56 0 0 0 .414.175h4.706q.24 0 .414-.175a.56.56 0 0 0 .174-.413v-3.619l3.959 3.96v-.005q.261.25.703.252h4.945q.196 0 .327-.13.152-.153.152-.306a.54.54 0 0 0-.043-.24l-2.68-5.01q2.287-1.329 2.287-4.291 0-2.1-1.29-3.44h.003l-.038-.039-.02-.02-4.347-4.346v.003a5 5 0 0 0-.45-.415q-1.743-1.416-4.727-1.416zm14.433 2.933.013.027zm.322.847.01.037zm.101.456.012.067zm.065.495.006.084zm-9.627 5.661h1.83zm-.011 4.386a.57.57 0 0 1-.163.298.57.57 0 0 1-.415.174h-4.705 4.706q.24 0 .414-.174a.57.57 0 0 0 .163-.298m9.945.341za.44.44 0 0 1-.327.13h-4.945 4.945q.196 0 .327-.13z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-44.5 -167.836)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M86.137 174.01a.57.57 0 0 0-.414.175.56.56 0 0 0-.174.414v14.073q0 .24.174.414a.56.56 0 0 0 .414.174h4.706q.24 0 .414-.174a.56.56 0 0 0 .174-.414v-4.27h1.83l1.917 4.314q.262.544.915.544h4.945a.44.44 0 0 0 .326-.13q.153-.153.153-.306a.54.54 0 0 0-.043-.24l-2.68-5.01q2.287-1.329 2.287-4.291 0-2.44-1.742-3.857-1.743-1.415-4.728-1.415zm5.294 4.052h2.723q.5 0 .74.371.262.348.262.828t-.261.806q-.262.305-.74.305H91.43Z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-44.5 -167.836)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g4\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M64.965.217h-6.056q-.785 0-.98.72l-4.75 13.92a.7.7 0 0 0-.021.197q0 .128.126.278l.004.005 4.4 4.4a.52.52 0 0 0 .348.13h4.118q.696 0 .98-.74l.545-1.525h4.154l2.014 2.014v-.005q.265.255.672.256h4.117q.197 0 .327-.13.153-.153.153-.284a.7.7 0 0 0-.022-.196l-4.75-13.92a1 1 0 0 0-.28-.484h.006L65.719.503a1 1 0 0 0-.055-.05 1 1 0 0 0-.13-.096l-.01-.005a1 1 0 0 0-.14-.065l-.009-.004a1 1 0 0 0-.157-.041q-.028-.006-.055-.01a2 2 0 0 0-.148-.011h-.005q-.023-.004-.045-.004Zm.7.236.045.04-.046-.045zm.16.198zm-8.137 18.202.022.022-.022.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(5.5 5.957)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M58.909.218q-.785 0-.98.718l-4.75 13.921a.7.7 0 0 0-.021.196q0 .13.126.278h-.001l.005.005 4.4 4.4a.52.52 0 0 0 .349.13h4.117q.696 0 .98-.74l.545-1.525h4.154l2.014 2.014v-.004q.266.255.672.256h4.118q.196 0 .326-.13.153-.153.153-.284a.7.7 0 0 0-.022-.196l-4.75-13.92a1 1 0 0 0-.28-.485h.006L65.718.502 65.717.5 65.71.494l-.046-.046v.005q-.256-.234-.7-.236Zm-1.221 18.635.022.022-.022.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(5.5 5.957)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M58.909.218q-.785 0-.98.718l-4.75 13.92a.7.7 0 0 0-.021.197q0 .13.13.284a.52.52 0 0 0 .349.13h4.117q.697 0 .98-.74l.545-1.526h5.315l.545 1.525q.283.74.98.74h4.118q.196.001.326-.13.153-.152.153-.283a.7.7 0 0 0-.022-.196L65.945.937q-.195-.72-.98-.72zm3.027 4.204 1.547 4.531H60.39Z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(5.5 5.957)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g5\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M73.134.218a.57.57 0 0 0-.414.174.57.57 0 0 0-.174.414V14.88q0 .262.174.435l.004.003 4.397 4.397a.6.6 0 0 0 .413.153h4.488q.24 0 .414-.174a.56.56 0 0 0 .174-.414v-4.177a.6.6 0 0 0 .13.19l.007.006 4.395 4.395a.56.56 0 0 0 .414.174h4.487q.24 0 .414-.174a.57.57 0 0 0 .175-.414V5.207a.57.57 0 0 0-.175-.414l-.007-.007L88.065.402l-.008-.01s0 0 0 0a.57.57 0 0 0-.415-.174h-4.487a.57.57 0 0 0-.414.174.56.56 0 0 0-.174.414v4.18a.6.6 0 0 0-.131-.193l-4.4-4.4v0l-.004-.005v0a.56.56 0 0 0-.41-.17z\",\n    style: {\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1,\n      paintOrder: \"stroke fill markers\"\n    },\n    transform: \"translate(5.5 5.957)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M73.135.218a.57.57 0 0 0-.414.174.57.57 0 0 0-.175.414V14.88q0 .256.17.43l.005.005.002.002 4.398 4.398a.6.6 0 0 0 .414.153h4.487q.24 0 .414-.174a.56.56 0 0 0 .174-.414V15.1q.042.101.126.186l.006.005q0 .003.003.004l4.396 4.397a.56.56 0 0 0 .414.174h4.488q.24 0 .414-.174a.57.57 0 0 0 .175-.414V5.207a.57.57 0 0 0-.175-.414l-.007-.006L88.065.402l-.008-.01a.57.57 0 0 0-.414-.174h-4.487a.57.57 0 0 0-.414.175.56.56 0 0 0-.174.414v4.18a.6.6 0 0 0-.132-.194l-4.4-4.4-.004-.005a.56.56 0 0 0-.41-.17zm5.055 14.809a1 1 0 0 1-.024.075q.014-.037.024-.075\",\n    style: {\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeLinecap: \"square\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1,\n      paintOrder: \"stroke fill markers\"\n    },\n    transform: \"translate(5.5 5.957)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M73.134.218a.57.57 0 0 0-.414.174.57.57 0 0 0-.174.414V14.88q0 .262.174.435a.6.6 0 0 0 .414.153h4.488q.24 0 .414-.174a.56.56 0 0 0 .174-.414v-4.64h4.357v4.64q0 .24.174.414a.56.56 0 0 0 .414.174h4.487q.24 0 .414-.174a.57.57 0 0 0 .175-.414V.806a.57.57 0 0 0-.175-.414.57.57 0 0 0-.414-.174h-4.487a.57.57 0 0 0-.414.174.56.56 0 0 0-.174.414v4.465H78.21V.806a.57.57 0 0 0-.174-.414.57.57 0 0 0-.414-.174Z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(5.5 5.957)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g6\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M98.372 21.806a.55.55 0 0 0-.406.17.56.56 0 0 0-.172.408v3.238a.56.56 0 0 0 .246.471c.017.021.031.042.051.062l.002.002.002.004 4.332 4.332a.56.56 0 0 0 .408.172h3.368v.364q-.001.88-.602 1.351-.58.471-1.588.47a3.2 3.2 0 0 1-.7-.07l-1.427-1.43c-.015-.014-.034-.022-.05-.034a.48.48 0 0 0-.417-.223h-4.847a.47.47 0 0 0-.344.148.44.44 0 0 0-.129.323q0 1.803 1.666 3.386c.022.022.04.043.063.065l4.218 4.22.03.03.087.086v-.002q.167.163.35.324.944.815 2.531 1.33 1.587.495 3.54.494 3.58 0 5.726-1.588 2.144-1.608 2.144-4.869v-8.193a.56.56 0 0 0-.167-.402l-4.336-4.338a1 1 0 0 0-.067-.055.56.56 0 0 0-.47-.246zm4.055 4.527h.148a.6.6 0 0 0-.148.106z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M98.503 21.936a.56.56 0 0 0-.407.171.56.56 0 0 0-.172.408v3.239q0 .232.168.402h-.001l.005.005-.003-.004.003.004 4.332 4.332q.171.172.407.172h3.497v-4.333 4.826q0 .88-.6 1.352-.58.471-1.588.471-.196 0-.376-.019a3 3 0 0 1-.313-.05h-.008l-1.561-1.561a.46.46 0 0 0-.215-.113.6.6 0 0 0-.123-.016h-4.847a.47.47 0 0 0-.344.15.44.44 0 0 0-.128.323 3.9 3.9 0 0 0 .406 1.725q.4.823 1.192 1.594h-.002l4.22 4.22.03.03.088.088v-.002q.166.162.35.323.945.815 2.531 1.33 1.587.494 3.539.494 3.582 0 5.727-1.588 2.145-1.608 2.145-4.869v-8.193a.56.56 0 0 0-.168-.403l-4.336-4.337a.56.56 0 0 0-.407-.172zm3.925 4.397h.147a.6.6 0 0 0-.147.106zm-5.979 6.639.013.036z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M98.373 21.805a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.407v3.24q0 .236.172.407t.407.171h7.83v4.826q0 .88-.602 1.352-.579.471-1.587.471-1.65 0-2.059-1.286-.15-.473-.536-.473h-4.847a.47.47 0 0 0-.344.15.44.44 0 0 0-.129.323q0 1.95 1.952 3.646.945.814 2.531 1.33 1.588.493 3.54.493 3.58 0 5.726-1.587 2.145-1.609 2.145-4.869v-8.194a.56.56 0 0 0-.172-.407.56.56 0 0 0-.407-.172z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g7\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M118.388 22.02q-.773 0-.967.708l-4.676 13.705a.7.7 0 0 0-.021.193q0 .13.129.28a1 1 0 0 0 .082.058c.016.024.028.046.049.07v.002l4.332 4.332a.5.5 0 0 0 .341.13h4.055q.687-.001.965-.731l.537-1.5h4.09l1.982 1.982v-.004q.262.25.662.25h4.055a.43.43 0 0 0 .32-.127q.15-.15.15-.279a.7.7 0 0 0-.02-.193l-4.676-13.705a.97.97 0 0 0-.278-.477h.008l-4.287-4.285-.006-.008-.045-.045v.006q-.016-.012-.03-.023-.258-.338-.79-.338zm11.603 15.014v.002zm-12.675 3.463.021.022-.021.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M118.518 22.15q-.773 0-.965.708l-4.676 13.706a.7.7 0 0 0-.022.193q0 .127.129.279l4.331 4.332q.15.129.344.129h4.053q.687 0 .966-.73l.536-1.5h4.09l1.983 1.982v-.004a.92.92 0 0 0 .662.251h4.054a.44.44 0 0 0 .321-.128q.15-.15.15-.279a.7.7 0 0 0-.02-.193l-4.677-13.706a.97.97 0 0 0-.276-.476h.006l-4.286-4.286-.006-.006-.046-.045v.005q-.25-.23-.689-.232zm-5.534 14.886-.004-.004h-.001zm12.341-14.463q.02.035.04.073-.02-.038-.04-.073m-8.01 17.925.022.022-.022.063z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M118.388 22.02q-.773 0-.966.708l-4.675 13.706a.7.7 0 0 0-.022.193q0 .128.129.279.15.128.343.128h4.053q.687 0 .966-.729l.536-1.501h5.233l.537 1.501q.279.73.965.73h4.054a.44.44 0 0 0 .321-.13q.15-.15.15-.278a.7.7 0 0 0-.02-.193l-4.677-13.706q-.192-.708-.965-.708zm2.98 4.14 1.524 4.46h-3.046z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g8\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M138.187 21.806q-4.826 0-6.885 2.787-1.094 1.501-1.094 3.668v2.531q0 2.166 1.094 3.668a6.4 6.4 0 0 0 .707.803l.053.057 4.334 4.333a6.2 6.2 0 0 0 2.199 1.415q1.758.643 3.883.642 2.122 0 3.687-.492 1.567-.515 2.512-1.33 1.887-1.652 1.887-3.647a.4.4 0 0 0-.15-.322l-3.712-3.71h3.39a.44.44 0 0 0 .321-.13q.15-.15.15-.342 0-1.991-1.882-3.642l-3.637-3.637a7 7 0 0 0-.347-.37 8 8 0 0 0-.483-.46q-.944-.815-2.51-1.308-1.565-.515-3.517-.514z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M138.317 21.936q-4.826 0-6.885 2.788-1.093 1.5-1.093 3.668v2.53q0 2.167 1.093 3.668.293.394.63.73h-.003l4.337 4.336v-.003a6.2 6.2 0 0 0 2.2 1.414q1.758.645 3.882.644c2.124-.001 2.645-.165 3.689-.494q1.565-.514 2.51-1.33 1.887-1.65 1.887-3.646a.4.4 0 0 0-.15-.322l-3.711-3.71h3.389a.44.44 0 0 0 .322-.129q.15-.15.15-.343 0-1.992-1.882-3.641l-3.638-3.638a7 7 0 0 0-.7-.7 5.5 5.5 0 0 0-.815-.577 7 7 0 0 0-.478-.252 9 9 0 0 0-1.217-.479q-1.566-.515-3.517-.515zm7.24 3.208.013.022zm.369.714.014.033zm.134.379.01.034zm.091.366.008.036zm.058.381.006.063zm-5.082 4.453h4.633zm-.771.58zm-6.468 4.56\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M138.188 21.806q-4.827 0-6.885 2.788-1.094 1.5-1.094 3.668v2.53q0 2.167 1.094 3.668a6.2 6.2 0 0 0 2.83 2.145q1.76.645 3.883.644c2.123-.001 2.645-.165 3.689-.494q1.565-.514 2.51-1.33 1.887-1.65 1.887-3.646a.4.4 0 0 0-.15-.322.4.4 0 0 0-.322-.15h-4.633q-.471 0-.772.58-.28.579-.707.879-.43.3-1.395.3-.945 0-1.544-.471-.58-.473-.58-1.352v-3.432q0-.879.58-1.351.6-.472 1.544-.472.965 0 1.395.3.428.3.707.88.3.579.772.579h4.633a.44.44 0 0 0 .322-.129q.15-.15.15-.343 0-1.995-1.887-3.646-.945-.816-2.51-1.309-1.566-.514-3.517-.514\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g9\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M155.41 21.216q-2.36 0-4.096.621a5.8 5.8 0 0 0-2.81 2.104q-1.074 1.479-1.073 3.73v2.531q0 2.253 1.072 3.733.31.425.676.779l.033.037 4.332 4.334q.004.002.006.004a5.8 5.8 0 0 0 2.227 1.41q1.737.623 4.095.623.656-.002 1.276-.054l.697.697q.365.536 1.053.537h4.096q.192 0 .343-.193.172-.173.022-.473l-1.588-2.145q2.08-1.629 2.08-4.783v-2.615q0-2.21-1.072-3.69a6 6 0 0 0-.96-1.042h-.001l-3.686-3.686a6 6 0 0 0-.334-.357 5.8 5.8 0 0 0-2.29-1.48q-1.74-.623-4.098-.622z\",\n    style: {\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      paintOrder: \"stroke fill markers\"\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M155.54 21.346q-2.358 0-4.096.622a5.8 5.8 0 0 0-2.81 2.102q-1.072 1.48-1.072 3.732v2.531q0 2.253 1.072 3.732a6 6 0 0 0 .579.687l4.332 4.332.005.005a5.8 5.8 0 0 0 2.226 1.411q1.737.622 4.097.622.654-.002 1.275-.054l.698.698q.365.536 1.051.536h4.097q.193 0 .343-.193.171-.172.021-.472l-1.587-2.145q2.08-1.629 2.08-4.783v-2.617q0-2.208-1.072-3.689a6 6 0 0 0-.962-1.041h.003l-3.686-3.687a6 6 0 0 0-.635-.635l-.016-.016v.003a5.9 5.9 0 0 0-1.846-1.059q-1.738-.622-4.096-.622zm1.186 4.42q.043.019.085.04-.042-.021-.085-.04m.983 1.322q.019.137.02.285v3.39q-.001.052-.006.102.003-.05.004-.103v-3.389q-.001-.15-.018-.285m.011 3.867-.011.096q.007-.047.011-.096m-4.358.028q.004.038.009.074-.007-.037-.01-.074zm4.333.167q-.008.044-.019.087.011-.043.019-.087m-4.31.02.017.084-.017-.083zm10.089.089q-.01.105-.023.208.012-.103.023-.208m-10.048.091.023.076zm.06.177.023.056zm4.035.131-.04.073zm-3.959.032.027.048zm3.863.124q-.022.031-.045.062.023-.03.045-.062m-3.766.03.025.035q-.013-.016-.025-.035m3.644.121q-.017.021-.035.04.018-.018.035-.04m6.061.01-.035.167q.019-.083.035-.167m-8.73.514.117.03zm8.049 1.272q-.044.073-.092.144.048-.071.092-.144m-.17.265q-.052.072-.105.142l.104-.142zm-.18.244q-.057.07-.115.139.058-.069.115-.139m-.202.241q-.046.05-.095.1.049-.05.095-.1m-11.075 1.502a6 6 0 0 0 .388.155 6 6 0 0 1-.388-.155m1.814.539.037.007zm.736.117.11.014zm.883.086.083.005zm3.665 1.155.05.015q-.026-.007-.05-.015m4.659.024q-.02.01-.04.016.02-.006.04-.016m-4.486.015q.025.005.052.009-.027-.004-.052-.009m4.418.01\",\n    style: {\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      paintOrder: \"stroke fill markers\"\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M155.41 21.216q-2.358 0-4.096.622a5.8 5.8 0 0 0-2.81 2.102q-1.072 1.48-1.072 3.732v2.531q0 2.253 1.072 3.732a5.8 5.8 0 0 0 2.81 2.102q1.737.622 4.097.622.73 0 1.415-.064l.558.707q.364.537 1.051.537h4.097q.192 0 .343-.193.171-.171.021-.472l-1.587-2.145q2.08-1.63 2.08-4.783v-2.617q0-2.209-1.072-3.689a5.8 5.8 0 0 0-2.81-2.102q-1.737-.622-4.096-.622zm0 4.183q1.01 0 1.588.493.6.472.6 1.351v3.39q0 .878-.6 1.372-.579.471-1.587.472-1.008 0-1.61-.472-.578-.472-.578-1.351v-3.432q0-.88.579-1.352.6-.471 1.609-.471z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g10\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M166.144 22.02a.56.56 0 0 0-.408.17.56.56 0 0 0-.17.409v8.193q-.001 2.94 1.642 4.504l.065.066.031.032 4.305 4.302q.24.24.52.448 2.123 1.566 5.728 1.566 3.603 0 5.705-1.566 2.123-1.565 2.123-4.889v-8.193a.56.56 0 0 0-.168-.403l-.004-.006-4.332-4.332q-.032-.03-.067-.054a1 1 0 0 0-.064-.076.55.55 0 0 0-.406-.17h-4.485a.55.55 0 0 0-.406.17.56.56 0 0 0-.172.408v4.162a.6.6 0 0 0-.08-.102l-4.334-4.334-.004-.004q-.032-.03-.066-.054a.56.56 0 0 0-.47-.246zm15.164.489h.002a.6.6 0 0 1 .043.22v8.194q-.002.102-.006.201.002-.099.004-.201V22.73a.5.5 0 0 0-.043-.22z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M166.274 22.15a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.407v8.194q0 2.88 1.578 4.44h-.002l.034.031 4.304 4.306v-.002q.242.238.52.447 2.124 1.566 5.727 1.566t5.706-1.566q2.123-1.566 2.123-4.89V27.06a.56.56 0 0 0-.168-.402h.001l-.005-.005-4.331-4.332h-.001a.56.56 0 0 0-.408-.171h-4.482a.56.56 0 0 0-.408.171.56.56 0 0 0-.172.408v8.536q0 .232-.042.436v-4.64a.56.56 0 0 0-.168-.403l-4.333-4.334-.003-.003a.56.56 0 0 0-.408-.171zm15.036.36a.6.6 0 0 1 .043.22v8.193q-.001.102-.005.202.002-.1.004-.202v-8.194a.6.6 0 0 0-.043-.22zm-9.985.105a.6.6 0 0 1 .012.114v8.537-8.537a1 1 0 0 0-.011-.114zm9.931 9.631-.014.092zm-5.964.202q-.082.09-.18.169h-.001q-.461.374-1.192.45.156-.016.301-.045a2.4 2.4 0 0 0 .575-.199 1.9 1.9 0 0 0 .497-.376zm5.721.844-.026.08z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M166.144 22.02a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.407v8.194q0 3.324 2.102 4.89 2.124 1.566 5.727 1.566c3.603 0 4.304-.522 5.705-1.566q2.124-1.566 2.123-4.89v-8.194a.56.56 0 0 0-.171-.407.56.56 0 0 0-.408-.172h-4.482a.56.56 0 0 0-.408.172.56.56 0 0 0-.172.407v8.537q0 .88-.6 1.351-.579.472-1.587.472t-1.609-.472q-.579-.472-.579-1.351v-8.537a.56.56 0 0 0-.172-.407.56.56 0 0 0-.407-.172z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g11\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M183.96 22.03a.55.55 0 0 0-.406.172.55.55 0 0 0-.172.407v13.857a.55.55 0 0 0 .242.465q.026.037.059.072.026.024.055.045l4.275 4.277q.171.172.408.172h13.555a.56.56 0 0 0 .408-.172.56.56 0 0 0 .172-.408v-3.023a.56.56 0 0 0-.168-.403l-1.576-1.576a.6.6 0 0 0 .35-.531v-2.79a.55.55 0 0 0-.172-.405l-1.395-1.395v-.129h2.166a.56.56 0 0 0 .408-.172.55.55 0 0 0 .172-.406v-3.025a.56.56 0 0 0-.172-.409l-4.332-4.332c.022.022.036.048.053.07q-.024-.03-.05-.06a1 1 0 0 0-.071-.058.56.56 0 0 0-.467-.242z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M184.091 22.16a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.408v13.856q0 .236.172.407.026.025.054.046l-.005-.004 4.28 4.28a.56.56 0 0 0 .408.172h13.556a.56.56 0 0 0 .408-.171.56.56 0 0 0 .171-.408v-3.024a.56.56 0 0 0-.167-.403l-1.576-1.576a.6.6 0 0 0 .177-.123.56.56 0 0 0 .172-.407v-2.79a.56.56 0 0 0-.172-.407l-1.394-1.394v-.128h2.166a.56.56 0 0 0 .408-.172.56.56 0 0 0 .171-.408v-3.024a.56.56 0 0 0-.171-.407l-4.332-4.333c.021.022.034.047.052.07q-.023-.03-.05-.06a.56.56 0 0 0-.408-.171zm13.742.157.005.005zm.09.118.03.058q-.014-.03-.03-.058m-.271 3.865a.6.6 0 0 1-.22.044h-8.343 8.343a.6.6 0 0 0 .22-.044m-.992 5.17a.54.54 0 0 1-.407.172h-7.164 7.164a.54.54 0 0 0 .407-.172m1.394 5.533zm-14.245.095.013.008zm14.058.034a.6.6 0 0 1-.22.043H184.09h13.556a.6.6 0 0 0 .22-.043zm-13.972.007.033.01z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M183.961 22.03a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.408v13.856q0 .236.172.407.171.172.407.172h13.556a.56.56 0 0 0 .407-.172.56.56 0 0 0 .172-.407v-3.024a.56.56 0 0 0-.172-.408.56.56 0 0 0-.407-.171h-8.559V31.51h7.165a.56.56 0 0 0 .407-.172.56.56 0 0 0 .172-.407v-2.789a.56.56 0 0 0-.172-.407.56.56 0 0 0-.407-.172h-7.165v-1.35h8.344a.56.56 0 0 0 .408-.172.56.56 0 0 0 .171-.408V22.61a.56.56 0 0 0-.171-.408.56.56 0 0 0-.408-.171z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-desktop_svg__letter logo-desktop_svg__g12\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M207.1 21.806q-3.26 0-5.212 1.373-1.951 1.351-1.951 3.56.001 1.694 1.133 2.791l.048.05q.067.068.137.134l.014.014 2.48 2.48h-3.79q-.495 0-.495.47.001 1.47 1.147 2.593l.013.013.01.01q.13.135.276.266l.011.012 3.926 3.925a5.5 5.5 0 0 0 1.055.905q1.994 1.308 5.576 1.308t5.748-1.373c2.166-1.373 2.166-2.11 2.166-3.582q0-1.94-1.156-3.02l-2.559-2.556h2.686q.237 0 .365-.129.15-.128.15-.342 0-1.16-1.078-2.228l-4.308-4.307-.004-.004-.026-.025-.05-.053-.022-.02a7 7 0 0 0-.992-.828q-2.016-1.437-5.297-1.437z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M207.232 21.936q-3.26 0-5.213 1.372-1.95 1.352-1.951 3.56 0 1.747 1.201 2.86l2.61 2.61h.607q.45 0 .73.279.375.36 1.093.498-.719-.136-1.094-.498-.279-.279-.729-.279h-4.397q-.494 0-.494.472 0 1.583 1.327 2.762l3.926 3.925q.428.483 1.053.906 1.995 1.308 5.577 1.308c3.582 0 4.304-.458 5.748-1.373s2.167-2.109 2.167-3.582q0-1.94-1.158-3.02l-2.557-2.557h2.685q.236 0 .365-.128.15-.129.15-.343 0-1.16-1.078-2.228h.002l-4.337-4.338v.002l.027.03a7 7 0 0 0-.963-.801q-2.016-1.437-5.298-1.438zm6.466 2.456.028.031zm.232.284.02.029q-.008-.015-.02-.03zm.174.256.028.044zm.168.3.01.02zm.106.248.024.066zm.144.57.01.068zm-8.61.959q.14.128.419.224.419.129 1.463.27-1.046-.141-1.464-.27a1.2 1.2 0 0 1-.418-.225zm-3.395 3.554q.121.058.245.113-.125-.055-.244-.113zm1.217.472q.11.034.221.066-.112-.031-.22-.066zm.685.185q.1.025.203.049zm.802.166c.042.007.08.016.123.023zm3.985 1.46c-.164.15-.49.251-.97.305.48-.054.806-.155.97-.305m-8.005 2.956.05.039z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M207.101 21.806q-3.26 0-5.212 1.372-1.95 1.352-1.951 3.56 0 3.927 6.07 4.655 1.908.214 2.552.45.643.216.643.601 0 .622-2.037.622-1.48 0-2.08-.579-.28-.279-.73-.279h-4.397q-.494 0-.494.472 0 1.93 1.974 3.26 1.995 1.31 5.576 1.309 3.583 0 5.749-1.373c2.166-1.373 2.166-2.11 2.166-3.582q0-2.21-1.501-3.303-1.48-1.116-4.998-1.523-1.673-.193-2.23-.364-.558-.193-.558-.515 0-.6 1.437-.6 1.03 0 1.544.471a.95.95 0 0 0 .665.257h4.611q.237 0 .365-.128.15-.129.15-.343 0-1.588-2.016-3.003-2.016-1.437-5.298-1.437\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(4.971 -15.716)\"\n  })));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (SvgLogoDesktop);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/images/logo-desktop.svg\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/images/logo-mobile.svg":
/*!************************************!*\
  !*** ./app/images/logo-mobile.svg ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\nvar SvgLogoMobile = function SvgLogoMobile(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlSpace: \"preserve\",\n    className: \"logo-mobile_svg__logo-svg\",\n    viewBox: \"0 0 136.601 53.364\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g1\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M57.755 173.793q-3.311 0-5.293 1.394-1.983 1.372-1.983 3.617 0 .23.021.447v.004a4 4 0 0 0 .056.389l.005.029a4 4 0 0 0 .093.376l.004.013a3.6 3.6 0 0 0 .504 1.032l.008.012q.113.159.245.308l.008.01q.13.147.277.284l2.65 2.65H50.5q-.5 0-.5.48.001.181.02.358l.005.063a3.4 3.4 0 0 0 .158.703l.002.006.007.023a3 3 0 0 0 .155.37q.079.161.174.316l.013.02q.096.154.21.302l.016.022q.13.166.283.325l.003.004q.138.147.296.288l3.992 3.992q.434.49 1.07.92 2.026 1.329 5.664 1.329t5.839-1.395q2.2-1.395 2.2-3.638 0-1.97-1.176-3.067l-2.596-2.597h2.727q.239 0 .37-.13a.44.44 0 0 0 .152-.349q-.001-1.178-1.094-2.263h.002l-4.406-4.405v.002a7.3 7.3 0 0 0-.95-.784q-2.048-1.46-5.38-1.46zm6.986 3.05.021.034zm.275.556.021.057zm.144.575zm-8.685.309zm-.06.662zm5.746 1.193zm-10.066 1.895.035.025zm.225.157.033.02zm.23.142.047.028zm.395.213q.14.069.286.131-.148-.064-.286-.13zm.63.273zm.609.21q.125.04.255.078-.129-.038-.255-.077zm.683.187q.123.03.25.06-.127-.029-.25-.06zm.746.157q.122.024.248.046-.126-.022-.248-.046zm3.217.498zm.93 1.005zm-8.139 2.994.07.054z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-27.589 -168.293)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M57.755 173.793q-3.31 0-5.294 1.394-1.982 1.372-1.982 3.617 0 1.773 1.221 2.903l2.65 2.651H50.5q-.5 0-.5.48 0 1.604 1.341 2.799h.001l3.992 3.992q.434.49 1.07.92 2.026 1.33 5.664 1.33c3.638 0 4.372-.466 5.838-1.395q2.2-1.394 2.2-3.638 0-1.97-1.175-3.067l-2.597-2.597h2.727q.24 0 .37-.13a.44.44 0 0 0 .153-.35q0-1.177-1.095-2.262h.002l-4.405-4.406v.002a7.3 7.3 0 0 0-.95-.784q-2.048-1.46-5.38-1.459zm6.986 3.05.02.034zm.163.295q.008.015.015.032zm.113.264.018.049q-.008-.025-.018-.05zm-12.923 4.63.038.028zm.229.159.027.018zm.24.149.028.016zm.39.209q.133.064.274.126a9 9 0 0 1-.275-.126zm1.231.48q.125.04.254.077-.13-.038-.254-.077m.689.187q.119.03.242.059-.123-.03-.242-.059m.736.155c.085.016.167.033.254.047-.087-.014-.169-.031-.254-.047m-3.989 4.497.073.057z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-27.589 -168.293)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M57.755 173.793q-3.31 0-5.294 1.394-1.982 1.372-1.982 3.617 0 3.986 6.165 4.726 1.94.219 2.593.458.653.218.653.61 0 .632-2.07.632-1.502 0-2.113-.589-.283-.282-.74-.283H50.5q-.501 0-.501.48 0 1.96 2.004 3.311 2.025 1.329 5.664 1.329t5.838-1.394q2.2-1.395 2.2-3.638 0-2.245-1.524-3.355-1.504-1.133-5.076-1.547-1.7-.195-2.266-.37-.566-.196-.566-.523 0-.61 1.46-.61 1.045 0 1.568.48a.96.96 0 0 0 .675.26h4.684q.24 0 .37-.13a.44.44 0 0 0 .153-.349q0-1.611-2.048-3.05-2.048-1.46-5.38-1.459\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-27.589 -168.293)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g2\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M71.875 174.01q-.785 0-.98.72l-4.75 13.92a.7.7 0 0 0-.021.197q0 .128.126.278l.004.005.002.002 4.398 4.398a.52.52 0 0 0 .348.13h4.118q.696 0 .98-.74l.545-1.525h4.154l2.014 2.014v-.004q.265.254.672.255h4.118q.195 0 .326-.13.153-.153.153-.283a.7.7 0 0 0-.022-.197l-4.75-13.92a1 1 0 0 0-.28-.484h.005l-4.35-4.35-.017-.016-.038-.038v.005a.8.8 0 0 0-.295-.172l-.011-.004a1 1 0 0 0-.167-.04l-.02-.004a2 2 0 0 0-.206-.015zm-5.625 15.115h-.001l.002.002zm12.541-14.681zm-.609 14.249zm.118.185zm.102.116zm.117.099zm.125.073zm.135.051zm.15.032zm-8.275 3.397.021.022-.021.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-26.695 -168.293)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M71.875 174.01q-.785 0-.98.72l-4.75 13.92a.7.7 0 0 0-.02.196q-.001.131.13.284l4.398 4.4a.52.52 0 0 0 .35.13h4.116q.698 0 .98-.74l.545-1.525H80.8l2.014 2.013v-.004q.265.255.672.256h4.117q.197 0 .327-.13.153-.153.152-.284a.7.7 0 0 0-.021-.196l-4.75-13.92a1 1 0 0 0-.28-.484h.005l-4.35-4.35-.017-.017-.038-.038v.005q-.254-.234-.7-.235zm6.916.434q.02.033.037.069l-.037-.07zm-3.888 3.772 1.547 4.53h-.001zm2.657 8.778.545 1.525zm-11.311 2.13.005.005zm4.404 3.522.022.022-.022.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-26.695 -168.293)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M71.875 174.01q-.785 0-.98.72l-4.75 13.92a.7.7 0 0 0-.021.196q0 .13.13.284a.52.52 0 0 0 .349.13h4.117q.697 0 .98-.74l.545-1.526h5.315l.545 1.525q.283.74.98.74h4.118q.196.001.326-.13.153-.152.153-.283a.7.7 0 0 0-.022-.196l-4.749-13.92q-.195-.72-.98-.72zm3.028 4.205 1.546 4.531h-3.093z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-26.695 -168.293)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g3\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M86.137 174.01a.57.57 0 0 0-.414.175.56.56 0 0 0-.174.414v14.073q0 .24.174.414.024.021.049.04-.024-.017-.046-.037l4.397 4.398a.56.56 0 0 0 .414.174h4.706q.24 0 .414-.174a.56.56 0 0 0 .174-.414v-3.619l3.959 3.96v-.005q.261.25.703.252h4.945q.196 0 .327-.13.152-.153.153-.306a.54.54 0 0 0-.044-.24l-2.68-5.01q2.288-1.329 2.288-4.291 0-2.1-1.29-3.44h.002l-.038-.039-.02-.02-4.347-4.346v.003a5 5 0 0 0-.45-.415q-1.743-1.416-4.728-1.416zm14.211 2.542.009.013zm.222.39.013.028zm.325.86.006.019-.006-.02zm-6.74.26zm6.839.188.009.056-.01-.056zm.064.491.006.078zm.023.542zm-.016.46zm-6.17.324zm6.14.016zm-.047.318zm-.063.311zm-.08.306q-.025.077-.051.152.026-.075.05-.152zm-.094.28zm-.29.624-.08.14zm-.154.252zm-.162.228zm-.18.222zm-.202.214zm-.205.19a4.6 4.6 0 0 1-.763.547 5 5 0 0 0 .763-.546zm-8.127 1.374h1.83zm-.174 4.684zm-5.236.163a1 1 0 0 0 .116.011h4.706-4.706a.6.6 0 0 1-.116-.01z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-27.363 -168.293)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M86.137 174.01a.57.57 0 0 0-.414.175.56.56 0 0 0-.174.414v14.073q0 .24.174.414l.003.003 4.397 4.397a.56.56 0 0 0 .414.175h4.706q.24 0 .414-.175a.56.56 0 0 0 .174-.413v-3.619l3.959 3.96v-.005q.261.25.703.252h4.945q.196 0 .327-.13.152-.153.152-.306a.54.54 0 0 0-.043-.24l-2.68-5.01q2.287-1.329 2.287-4.291 0-2.1-1.29-3.44h.003l-.038-.039-.02-.02-4.347-4.346v.003a5 5 0 0 0-.45-.415q-1.743-1.416-4.727-1.416zm14.433 2.933.013.027zm.322.847.01.037zm.101.456.012.067zm.065.495.006.084zm-9.627 5.661h1.83zm-.011 4.386a.57.57 0 0 1-.163.298.57.57 0 0 1-.415.174h-4.705 4.706q.24 0 .414-.174a.57.57 0 0 0 .163-.298m9.945.341za.44.44 0 0 1-.327.13h-4.945 4.945q.196 0 .327-.13z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-27.363 -168.293)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M86.137 174.01a.57.57 0 0 0-.414.175.56.56 0 0 0-.174.414v14.073q0 .24.174.414a.56.56 0 0 0 .414.174h4.706q.24 0 .414-.174a.56.56 0 0 0 .174-.414v-4.27h1.83l1.917 4.314q.262.544.915.544h4.945a.44.44 0 0 0 .326-.13q.153-.153.153-.306a.54.54 0 0 0-.043-.24l-2.68-5.01q2.287-1.329 2.287-4.291 0-2.44-1.742-3.857-1.743-1.415-4.728-1.415zm5.294 4.052h2.723q.5 0 .74.371.262.348.262.828t-.261.806q-.262.305-.74.305H91.43Z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-27.363 -168.293)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g4\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M64.965.217h-6.056q-.785 0-.98.72l-4.75 13.92a.7.7 0 0 0-.021.197q0 .128.126.278l.004.005 4.4 4.4a.52.52 0 0 0 .348.13h4.118q.696 0 .98-.74l.545-1.525h4.154l2.014 2.014v-.005q.265.255.672.256h4.117q.197 0 .327-.13.153-.153.153-.284a.7.7 0 0 0-.022-.196l-4.75-13.92a1 1 0 0 0-.28-.484h.006L65.719.503a1 1 0 0 0-.055-.05 1 1 0 0 0-.13-.096l-.01-.005a1 1 0 0 0-.14-.065l-.009-.004a1 1 0 0 0-.157-.041q-.028-.006-.055-.01a2 2 0 0 0-.148-.011h-.005q-.023-.004-.045-.004Zm.7.236.045.04-.046-.045zm.16.198zm-8.137 18.202.022.022-.022.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(22.288 5.5)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M58.909.218q-.785 0-.98.718l-4.75 13.921a.7.7 0 0 0-.021.196q0 .13.126.278h-.001l.005.005 4.4 4.4a.52.52 0 0 0 .349.13h4.117q.696 0 .98-.74l.545-1.525h4.154l2.014 2.014v-.004q.266.255.672.256h4.118q.196 0 .326-.13.153-.153.153-.284a.7.7 0 0 0-.022-.196l-4.75-13.92a1 1 0 0 0-.28-.485h.006L65.718.502 65.717.5 65.71.494l-.046-.046v.005q-.256-.234-.7-.236Zm-1.221 18.635.022.022-.022.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(22.288 5.5)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M58.909.218q-.785 0-.98.718l-4.75 13.92a.7.7 0 0 0-.021.197q0 .13.13.284a.52.52 0 0 0 .349.13h4.117q.697 0 .98-.74l.545-1.526h5.315l.545 1.525q.283.74.98.74h4.118q.196.001.326-.13.153-.152.153-.283a.7.7 0 0 0-.022-.196L65.945.937q-.195-.72-.98-.72zm3.027 4.204 1.547 4.531H60.39Z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(22.288 5.5)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g5\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M73.134.218a.57.57 0 0 0-.414.174.57.57 0 0 0-.174.414V14.88q0 .262.174.435l.004.003 4.397 4.397a.6.6 0 0 0 .413.153h4.488q.24 0 .414-.174a.56.56 0 0 0 .174-.414v-4.177a.6.6 0 0 0 .13.19l.007.006 4.395 4.395a.56.56 0 0 0 .414.174h4.487q.24 0 .414-.174a.57.57 0 0 0 .175-.414V5.207a.57.57 0 0 0-.175-.414l-.007-.007L88.065.402l-.008-.01s0 0 0 0a.57.57 0 0 0-.415-.174h-4.487a.57.57 0 0 0-.414.174.56.56 0 0 0-.174.414v4.18a.6.6 0 0 0-.131-.193l-4.4-4.4v0l-.004-.005v0a.56.56 0 0 0-.41-.17z\",\n    style: {\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"bevel\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1,\n      paintOrder: \"stroke fill markers\"\n    },\n    transform: \"translate(21.558 5.5)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M73.135.218a.57.57 0 0 0-.414.174.57.57 0 0 0-.175.414V14.88q0 .256.17.43l.005.005.002.002 4.398 4.398a.6.6 0 0 0 .414.153h4.487q.24 0 .414-.174a.56.56 0 0 0 .174-.414V15.1q.042.101.126.186l.006.005q0 .003.003.004l4.396 4.397a.56.56 0 0 0 .414.174h4.488q.24 0 .414-.174a.57.57 0 0 0 .175-.414V5.207a.57.57 0 0 0-.175-.414l-.007-.006L88.065.402l-.008-.01a.57.57 0 0 0-.414-.174h-4.487a.57.57 0 0 0-.414.175.56.56 0 0 0-.174.414v4.18a.6.6 0 0 0-.132-.194l-4.4-4.4-.004-.005a.56.56 0 0 0-.41-.17zm5.055 14.809a1 1 0 0 1-.024.075q.014-.037.024-.075\",\n    style: {\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeLinecap: \"square\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1,\n      paintOrder: \"stroke fill markers\"\n    },\n    transform: \"translate(21.558 5.5)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M73.134.218a.57.57 0 0 0-.414.174.57.57 0 0 0-.174.414V14.88q0 .262.174.435a.6.6 0 0 0 .414.153h4.488q.24 0 .414-.174a.56.56 0 0 0 .174-.414v-4.64h4.357v4.64q0 .24.174.414a.56.56 0 0 0 .414.174h4.487q.24 0 .414-.174a.57.57 0 0 0 .175-.414V.806a.57.57 0 0 0-.175-.414.57.57 0 0 0-.414-.174h-4.487a.57.57 0 0 0-.414.174.56.56 0 0 0-.174.414v4.465H78.21V.806a.57.57 0 0 0-.174-.414.57.57 0 0 0-.414-.174Z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(21.558 5.5)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g6\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M96.106 22.703a.55.55 0 0 0-.406.17.56.56 0 0 0-.172.408v3.238a.56.56 0 0 0 .246.47c.017.022.031.043.051.063l.002.002.002.004 4.332 4.332a.56.56 0 0 0 .408.172h3.368v.364q-.001.88-.602 1.35c-.386.316-.916.47-1.588.47a3.2 3.2 0 0 1-.7-.07l-1.427-1.43c-.015-.013-.034-.021-.05-.033a.48.48 0 0 0-.417-.223h-4.847a.47.47 0 0 0-.344.148.44.44 0 0 0-.129.323q0 1.802 1.666 3.386c.022.022.04.043.063.065l4.218 4.22.03.03.087.086v-.002q.167.163.35.324.945.815 2.531 1.33 1.587.494 3.54.494 3.58 0 5.726-1.588 2.145-1.608 2.144-4.87v-8.192a.56.56 0 0 0-.167-.402l-4.336-4.338a1 1 0 0 0-.067-.055.56.56 0 0 0-.47-.246zm4.055 4.527h.148a.6.6 0 0 0-.148.106z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.333 4.665)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M96.237 22.833a.56.56 0 0 0-.407.17.56.56 0 0 0-.172.409v3.239q0 .233.168.402h-.001l.005.005-.003-.004.003.004 4.332 4.332q.171.172.407.172h3.497v-4.333 4.826q0 .88-.6 1.352-.58.47-1.588.47-.196 0-.376-.018a3 3 0 0 1-.313-.05h-.008l-1.561-1.561a.46.46 0 0 0-.215-.113.6.6 0 0 0-.123-.016h-4.847a.47.47 0 0 0-.344.15.44.44 0 0 0-.128.323 3.9 3.9 0 0 0 .406 1.725q.4.823 1.192 1.594h-.002l4.22 4.22.03.03.088.088v-.002q.166.162.35.323.944.815 2.531 1.33 1.587.494 3.539.494 3.582 0 5.727-1.588 2.145-1.608 2.145-4.87v-8.192a.56.56 0 0 0-.168-.403l-4.336-4.337a.56.56 0 0 0-.407-.172zm3.925 4.397h.147a.6.6 0 0 0-.147.106zm-5.979 6.639.013.036z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.333 4.665)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M96.107 22.702a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.407v3.24q0 .236.172.407t.407.17h7.83v4.827q0 .88-.602 1.352-.579.47-1.587.47-1.65.001-2.059-1.285-.15-.473-.536-.473h-4.847a.47.47 0 0 0-.344.15.44.44 0 0 0-.129.323q0 1.95 1.952 3.646.945.814 2.531 1.33 1.588.492 3.54.493 3.58 0 5.726-1.587 2.145-1.608 2.145-4.87v-8.193a.56.56 0 0 0-.172-.407.56.56 0 0 0-.407-.172z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.333 4.665)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g7\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M118.388 22.02q-.773 0-.967.708l-4.676 13.705a.7.7 0 0 0-.021.193q0 .13.129.28a1 1 0 0 0 .082.058c.016.024.028.046.049.07v.002l4.332 4.332a.5.5 0 0 0 .341.13h4.055q.687-.001.965-.731l.537-1.5h4.09l1.982 1.982v-.004q.262.25.662.25h4.055a.43.43 0 0 0 .32-.127q.15-.15.15-.279a.7.7 0 0 0-.02-.193l-4.676-13.705a.97.97 0 0 0-.278-.477h.008l-4.287-4.285-.006-.008-.045-.045v.006q-.016-.012-.03-.023-.258-.338-.79-.338zm11.603 15.014v.002zm-12.675 3.463.021.022-.021.064z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-89.958 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M118.518 22.15q-.773 0-.965.708l-4.676 13.706a.7.7 0 0 0-.022.193q0 .127.129.279l4.331 4.332q.15.129.344.129h4.053q.687 0 .966-.73l.536-1.5h4.09l1.983 1.982v-.004a.92.92 0 0 0 .662.251h4.054a.44.44 0 0 0 .321-.128q.15-.15.15-.279a.7.7 0 0 0-.02-.193l-4.677-13.706a.97.97 0 0 0-.276-.476h.006l-4.286-4.286-.006-.006-.046-.045v.005q-.25-.23-.689-.232zm-5.534 14.886-.004-.004h-.001zm12.341-14.463q.02.035.04.073-.02-.038-.04-.073m-8.01 17.925.022.022-.022.063z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-89.958 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M118.388 22.02q-.773 0-.966.708l-4.675 13.706a.7.7 0 0 0-.022.193q0 .128.129.279.15.128.343.128h4.053q.687 0 .966-.729l.536-1.501h5.233l.537 1.501q.279.73.965.73h4.054a.44.44 0 0 0 .321-.13q.15-.15.15-.278a.7.7 0 0 0-.02-.193l-4.677-13.706q-.192-.708-.965-.708zm2.98 4.14 1.524 4.46h-3.046z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-89.958 5.562)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g8\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M138.187 21.806q-4.826 0-6.885 2.787-1.094 1.501-1.094 3.668v2.531q0 2.166 1.094 3.668a6.4 6.4 0 0 0 .707.803l.053.057 4.334 4.333a6.2 6.2 0 0 0 2.199 1.415q1.758.643 3.883.642 2.122 0 3.687-.492 1.567-.515 2.512-1.33 1.887-1.652 1.887-3.647a.4.4 0 0 0-.15-.322l-3.712-3.71h3.39a.44.44 0 0 0 .321-.13q.15-.15.15-.342 0-1.991-1.882-3.642l-3.637-3.637a7 7 0 0 0-.347-.37 8 8 0 0 0-.483-.46q-.944-.815-2.51-1.308-1.565-.515-3.517-.514z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.69 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M138.317 21.936q-4.826 0-6.885 2.788-1.093 1.5-1.093 3.668v2.53q0 2.167 1.093 3.668.293.394.63.73h-.003l4.337 4.336v-.003a6.2 6.2 0 0 0 2.2 1.414q1.758.645 3.882.644c2.124-.001 2.645-.165 3.689-.494q1.565-.514 2.51-1.33 1.887-1.65 1.887-3.646a.4.4 0 0 0-.15-.322l-3.711-3.71h3.389a.44.44 0 0 0 .322-.129q.15-.15.15-.343 0-1.992-1.882-3.641l-3.638-3.638a7 7 0 0 0-.7-.7 5.5 5.5 0 0 0-.815-.577 7 7 0 0 0-.478-.252 9 9 0 0 0-1.217-.479q-1.566-.515-3.517-.515zm7.24 3.208.013.022zm.369.714.014.033zm.134.379.01.034zm.091.366.008.036zm.058.381.006.063zm-5.082 4.453h4.633zm-.771.58zm-6.468 4.56\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.69 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M138.188 21.806q-4.827 0-6.885 2.788-1.094 1.5-1.094 3.668v2.53q0 2.167 1.094 3.668a6.2 6.2 0 0 0 2.83 2.145q1.76.645 3.883.644c2.123-.001 2.645-.165 3.689-.494q1.565-.514 2.51-1.33 1.887-1.65 1.887-3.646a.4.4 0 0 0-.15-.322.4.4 0 0 0-.322-.15h-4.633q-.471 0-.772.58-.28.579-.707.879-.43.3-1.395.3-.945 0-1.544-.471-.58-.473-.58-1.352v-3.432q0-.879.58-1.351.6-.472 1.544-.472.965 0 1.395.3.428.3.707.88.3.579.772.579h4.633a.44.44 0 0 0 .322-.129q.15-.15.15-.343 0-1.995-1.887-3.646-.945-.816-2.51-1.309-1.566-.514-3.517-.514\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.69 5.562)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g9\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M155.41 21.216q-2.36 0-4.096.621a5.8 5.8 0 0 0-2.81 2.104q-1.074 1.479-1.073 3.73v2.531q0 2.253 1.072 3.733.31.425.676.779l.033.037 4.332 4.334q.004.002.006.004a5.8 5.8 0 0 0 2.227 1.41q1.737.623 4.095.623.656-.002 1.276-.054l.697.697q.365.536 1.053.537h4.096q.192 0 .343-.193.172-.173.022-.473l-1.588-2.145q2.08-1.629 2.08-4.783v-2.615q0-2.21-1.072-3.69a6 6 0 0 0-.96-1.042h-.001l-3.686-3.686a6 6 0 0 0-.334-.357 5.8 5.8 0 0 0-2.29-1.48q-1.74-.623-4.098-.622z\",\n    style: {\n      fill: \"none\",\n      fillOpacity: 1,\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      paintOrder: \"stroke fill markers\"\n    },\n    transform: \"translate(-88.225 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M155.54 21.346q-2.358 0-4.096.622a5.8 5.8 0 0 0-2.81 2.102q-1.072 1.48-1.072 3.732v2.531q0 2.253 1.072 3.732a6 6 0 0 0 .579.687l4.332 4.332.005.005a5.8 5.8 0 0 0 2.226 1.411q1.737.622 4.097.622.654-.002 1.275-.054l.698.698q.365.536 1.051.536h4.097q.193 0 .343-.193.171-.172.021-.472l-1.587-2.145q2.08-1.629 2.08-4.783v-2.617q0-2.208-1.072-3.689a6 6 0 0 0-.962-1.041h.003l-3.686-3.687a6 6 0 0 0-.635-.635l-.016-.016v.003a5.9 5.9 0 0 0-1.846-1.059q-1.738-.622-4.096-.622zm1.186 4.42q.043.019.085.04-.042-.021-.085-.04m.983 1.322q.019.137.02.285v3.39q-.001.052-.006.102.003-.05.004-.103v-3.389q-.001-.15-.018-.285m.011 3.867-.011.096q.007-.047.011-.096m-4.358.028q.004.038.009.074-.007-.037-.01-.074zm4.333.167q-.008.044-.019.087.011-.043.019-.087m-4.31.02.017.084-.017-.083zm10.089.089q-.01.105-.023.208.012-.103.023-.208m-10.048.091.023.076zm.06.177.023.056zm4.035.131-.04.073zm-3.959.032.027.048zm3.863.124q-.022.031-.045.062.023-.03.045-.062m-3.766.03.025.035q-.013-.016-.025-.035m3.644.121q-.017.021-.035.04.018-.018.035-.04m6.061.01-.035.167q.019-.083.035-.167m-8.73.514.117.03zm8.049 1.272q-.044.073-.092.144.048-.071.092-.144m-.17.265q-.052.072-.105.142l.104-.142zm-.18.244q-.057.07-.115.139.058-.069.115-.139m-.202.241q-.046.05-.095.1.049-.05.095-.1m-11.075 1.502a6 6 0 0 0 .388.155 6 6 0 0 1-.388-.155m1.814.539.037.007zm.736.117.11.014zm.883.086.083.005zm3.665 1.155.05.015q-.026-.007-.05-.015m4.659.024q-.02.01-.04.016.02-.006.04-.016m-4.486.015q.025.005.052.009-.027-.004-.052-.009m4.418.01\",\n    style: {\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      paintOrder: \"stroke fill markers\"\n    },\n    transform: \"translate(-88.225 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M155.41 21.216q-2.358 0-4.096.622a5.8 5.8 0 0 0-2.81 2.102q-1.072 1.48-1.072 3.732v2.531q0 2.253 1.072 3.732a5.8 5.8 0 0 0 2.81 2.102q1.737.622 4.097.622.73 0 1.415-.064l.558.707q.364.537 1.051.537h4.097q.192 0 .343-.193.171-.171.021-.472l-1.587-2.145q2.08-1.63 2.08-4.783v-2.617q0-2.209-1.072-3.689a5.8 5.8 0 0 0-2.81-2.102q-1.737-.622-4.096-.622zm0 4.183q1.01 0 1.588.493.6.472.6 1.351v3.39q0 .878-.6 1.372-.579.471-1.587.472-1.008 0-1.61-.472-.578-.472-.578-1.351v-3.432q0-.88.579-1.352.6-.471 1.609-.471z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.225 5.562)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g10\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M166.144 22.02a.56.56 0 0 0-.408.17.56.56 0 0 0-.17.409v8.193q-.001 2.94 1.642 4.504l.065.066.031.032 4.305 4.302q.24.24.52.448 2.123 1.566 5.728 1.566 3.603 0 5.705-1.566 2.123-1.565 2.123-4.889v-8.193a.56.56 0 0 0-.168-.403l-.004-.006-4.332-4.332q-.032-.03-.067-.054a1 1 0 0 0-.064-.076.55.55 0 0 0-.406-.17h-4.485a.55.55 0 0 0-.406.17.56.56 0 0 0-.172.408v4.162a.6.6 0 0 0-.08-.102l-4.334-4.334-.004-.004q-.032-.03-.066-.054a.56.56 0 0 0-.47-.246zm15.164.489h.002a.6.6 0 0 1 .043.22v8.194q-.002.102-.006.201.002-.099.004-.201V22.73a.5.5 0 0 0-.043-.22z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.683 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M166.274 22.15a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.407v8.194q0 2.88 1.578 4.44h-.002l.034.031 4.304 4.306v-.002q.242.238.52.447 2.124 1.566 5.727 1.566t5.706-1.566q2.123-1.566 2.123-4.89V27.06a.56.56 0 0 0-.168-.402h.001l-.005-.005-4.331-4.332h-.001a.56.56 0 0 0-.408-.171h-4.482a.56.56 0 0 0-.408.171.56.56 0 0 0-.172.408v8.536q0 .232-.042.436v-4.64a.56.56 0 0 0-.168-.403l-4.333-4.334-.003-.003a.56.56 0 0 0-.408-.171zm15.036.36a.6.6 0 0 1 .043.22v8.193q-.001.102-.005.202.002-.1.004-.202v-8.194a.6.6 0 0 0-.043-.22zm-9.985.105a.6.6 0 0 1 .012.114v8.537-8.537a1 1 0 0 0-.011-.114zm9.931 9.631-.014.092zm-5.964.202q-.082.09-.18.169h-.001q-.461.374-1.192.45.156-.016.301-.045a2.4 2.4 0 0 0 .575-.199 1.9 1.9 0 0 0 .497-.376zm5.721.844-.026.08z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.683 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M166.144 22.02a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.407v8.194q0 3.324 2.102 4.89 2.124 1.566 5.727 1.566c3.603 0 4.304-.522 5.705-1.566q2.124-1.566 2.123-4.89v-8.194a.56.56 0 0 0-.171-.407.56.56 0 0 0-.408-.172h-4.482a.56.56 0 0 0-.408.172.56.56 0 0 0-.172.407v8.537q0 .88-.6 1.351-.579.472-1.587.472t-1.609-.472q-.579-.472-.579-1.351v-8.537a.56.56 0 0 0-.172-.407.56.56 0 0 0-.407-.172z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.683 5.562)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g11\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M183.96 22.03a.55.55 0 0 0-.406.172.55.55 0 0 0-.172.407v13.857a.55.55 0 0 0 .242.465q.026.037.059.072.026.024.055.045l4.275 4.277q.171.172.408.172h13.555a.56.56 0 0 0 .408-.172.56.56 0 0 0 .172-.408v-3.023a.56.56 0 0 0-.168-.403l-1.576-1.576a.6.6 0 0 0 .35-.531v-2.79a.55.55 0 0 0-.172-.405l-1.395-1.395v-.129h2.166a.56.56 0 0 0 .408-.172.55.55 0 0 0 .172-.406v-3.025a.56.56 0 0 0-.172-.409l-4.332-4.332c.022.022.036.048.053.07q-.024-.03-.05-.06a1 1 0 0 0-.071-.058.56.56 0 0 0-.467-.242z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.582 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M184.091 22.16a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.408v13.856q0 .236.172.407.026.025.054.046l-.005-.004 4.28 4.28a.56.56 0 0 0 .408.172h13.556a.56.56 0 0 0 .408-.171.56.56 0 0 0 .171-.408v-3.024a.56.56 0 0 0-.167-.403l-1.576-1.576a.6.6 0 0 0 .177-.123.56.56 0 0 0 .172-.407v-2.79a.56.56 0 0 0-.172-.407l-1.394-1.394v-.128h2.166a.56.56 0 0 0 .408-.172.56.56 0 0 0 .171-.408v-3.024a.56.56 0 0 0-.171-.407l-4.332-4.333c.021.022.034.047.052.07q-.023-.03-.05-.06a.56.56 0 0 0-.408-.171zm13.742.157.005.005zm.09.118.03.058q-.014-.03-.03-.058m-.271 3.865a.6.6 0 0 1-.22.044h-8.343 8.343a.6.6 0 0 0 .22-.044m-.992 5.17a.54.54 0 0 1-.407.172h-7.164 7.164a.54.54 0 0 0 .407-.172m1.394 5.533zm-14.245.095.013.008zm14.058.034a.6.6 0 0 1-.22.043H184.09h13.556a.6.6 0 0 0 .22-.043zm-13.972.007.033.01z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.582 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M183.961 22.03a.56.56 0 0 0-.407.172.56.56 0 0 0-.172.408v13.856q0 .236.172.407.171.172.407.172h13.556a.56.56 0 0 0 .407-.172.56.56 0 0 0 .172-.407v-3.024a.56.56 0 0 0-.172-.408.56.56 0 0 0-.407-.171h-8.559V31.51h7.165a.56.56 0 0 0 .407-.172.56.56 0 0 0 .172-.407v-2.789a.56.56 0 0 0-.172-.407.56.56 0 0 0-.407-.172h-7.165v-1.35h8.344a.56.56 0 0 0 .408-.172.56.56 0 0 0 .171-.408V22.61a.56.56 0 0 0-.171-.408.56.56 0 0 0-.408-.171z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.582 5.562)\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"logo-mobile_svg__letter logo-mobile_svg__g12\",\n    \"data-animation-play-state\": \"running\",\n    style: {\n      fillOpacity: 0\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M207.1 21.806q-3.26 0-5.212 1.373-1.951 1.351-1.951 3.56.001 1.694 1.133 2.791l.048.05q.067.068.137.134l.014.014 2.48 2.48h-3.79q-.495 0-.495.47.001 1.47 1.147 2.593l.013.013.01.01q.13.135.276.266l.011.012 3.926 3.925a5.5 5.5 0 0 0 1.055.905q1.994 1.308 5.576 1.308t5.748-1.373c2.166-1.373 2.166-2.11 2.166-3.582q0-1.94-1.156-3.02l-2.559-2.556h2.686q.237 0 .365-.129.15-.128.15-.342 0-1.16-1.078-2.228l-4.308-4.307-.004-.004-.026-.025-.05-.053-.022-.02a7 7 0 0 0-.992-.828q-2.016-1.437-5.297-1.437z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.291 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M207.232 21.936q-3.26 0-5.213 1.372-1.95 1.352-1.951 3.56 0 1.747 1.201 2.86l2.61 2.61h.607q.45 0 .73.279.375.36 1.093.498-.719-.136-1.094-.498-.279-.279-.729-.279h-4.397q-.494 0-.494.472 0 1.583 1.327 2.762l3.926 3.925q.428.483 1.053.906 1.995 1.308 5.577 1.308c3.582 0 4.304-.458 5.748-1.373s2.167-2.109 2.167-3.582q0-1.94-1.158-3.02l-2.557-2.557h2.685q.236 0 .365-.128.15-.129.15-.343 0-1.16-1.078-2.228h.002l-4.337-4.338v.002l.027.03a7 7 0 0 0-.963-.801q-2.016-1.437-5.298-1.438zm6.466 2.456.028.031zm.232.284.02.029q-.008-.015-.02-.03zm.174.256.028.044zm.168.3.01.02zm.106.248.024.066zm.144.57.01.068zm-8.61.959q.14.128.419.224.419.129 1.463.27-1.046-.141-1.464-.27a1.2 1.2 0 0 1-.418-.225zm-3.395 3.554q.121.058.245.113-.125-.055-.244-.113zm1.217.472q.11.034.221.066-.112-.031-.22-.066zm.685.185q.1.025.203.049zm.802.166c.042.007.08.016.123.023zm3.985 1.46c-.164.15-.49.251-.97.305.48-.054.806-.155.97-.305m-8.005 2.956.05.039z\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#db2777\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.291 5.562)\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M207.101 21.806q-3.26 0-5.212 1.372-1.95 1.352-1.951 3.56 0 3.927 6.07 4.655 1.908.214 2.552.45.643.216.643.601 0 .622-2.037.622-1.48 0-2.08-.579-.28-.279-.73-.279h-4.397q-.494 0-.494.472 0 1.93 1.974 3.26 1.995 1.31 5.576 1.309 3.583 0 5.749-1.373c2.166-1.373 2.166-2.11 2.166-3.582q0-2.21-1.501-3.303-1.48-1.116-4.998-1.523-1.673-.193-2.23-.364-.558-.193-.558-.515 0-.6 1.437-.6 1.03 0 1.544.471a.95.95 0 0 0 .665.257h4.611q.237 0 .365-.128.15-.129.15-.343 0-1.588-2.016-3.003-2.016-1.437-5.298-1.437\",\n    style: {\n      fontWeight: 900,\n      fontSize: \"21.7847px\",\n      fontFamily: \"Sans\",\n      InkscapeFontSpecification: \"&quot\",\n      letterSpacing: \"-.529167px\",\n      fill: \"#e5e5e5\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: \".1 .5\",\n      strokeOpacity: 1\n    },\n    transform: \"translate(-88.291 5.562)\"\n  })));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (SvgLogoMobile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/images/logo-mobile.svg\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/images/pause-svgrepo-com.svg":
/*!******************************************!*\
  !*** ./app/images/pause-svgrepo-com.svg ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\nvar SvgPauseSvgrepoCom = function SvgPauseSvgrepoCom(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlSpace: \"preserve\",\n    viewBox: \"0 0 365 365\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M74.5 0h73v365h-73zM217.5 0h73v365h-73z\"\n  })));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (SvgPauseSvgrepoCom);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9pbWFnZXMvcGF1c2Utc3ZncmVwby1jb20uc3ZnIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQSxzQkFBc0Isd0VBQXdFLGdCQUFnQixzQkFBc0IsT0FBTyxzQkFBc0Isb0JBQW9CLGdEQUFnRCxXQUFXO0FBQ2hQLDBDQUEwQywwQkFBMEIsbURBQW1ELG9DQUFvQyx5Q0FBeUMsWUFBWSxjQUFjLGtDQUFrQyxxREFBcUQ7QUFDclQsK0NBQStDLDBCQUEwQixZQUFZLHVCQUF1Qiw4QkFBOEIsNkJBQTZCLGVBQWU7QUFDdko7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0RBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRywrQkFBK0IsZ0RBQW1CO0FBQ3JEO0FBQ0EsR0FBRyxnREFBZ0QsZ0RBQW1CO0FBQ3RFO0FBQ0EsR0FBRztBQUNIO0FBQ0EsK0RBQWUsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9pbWFnZXMvcGF1c2Utc3ZncmVwby1jb20uc3ZnPzJjMTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9wYXRoO1xudmFyIF9leGNsdWRlZCA9IFtcInRpdGxlXCIsIFwidGl0bGVJZFwiXTtcbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyByZXR1cm4gX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAobikgeyBmb3IgKHZhciBlID0gMTsgZSA8IGFyZ3VtZW50cy5sZW5ndGg7IGUrKykgeyB2YXIgdCA9IGFyZ3VtZW50c1tlXTsgZm9yICh2YXIgciBpbiB0KSAoe30pLmhhc093blByb3BlcnR5LmNhbGwodCwgcikgJiYgKG5bcl0gPSB0W3JdKTsgfSByZXR1cm4gbjsgfSwgX2V4dGVuZHMuYXBwbHkobnVsbCwgYXJndW1lbnRzKTsgfVxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKGUsIHQpIHsgaWYgKG51bGwgPT0gZSkgcmV0dXJuIHt9OyB2YXIgbywgciwgaSA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKGUsIHQpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IGZvciAociA9IDA7IHIgPCBzLmxlbmd0aDsgcisrKSBvID0gc1tyXSwgdC5pbmNsdWRlcyhvKSB8fCB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsIG8pICYmIChpW29dID0gZVtvXSk7IH0gcmV0dXJuIGk7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHIsIGUpIHsgaWYgKG51bGwgPT0gcikgcmV0dXJuIHt9OyB2YXIgdCA9IHt9OyBmb3IgKHZhciBuIGluIHIpIGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsIG4pKSB7IGlmIChlLmluY2x1ZGVzKG4pKSBjb250aW51ZTsgdFtuXSA9IHJbbl07IH0gcmV0dXJuIHQ7IH1cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xudmFyIFN2Z1BhdXNlU3ZncmVwb0NvbSA9IGZ1bmN0aW9uIFN2Z1BhdXNlU3ZncmVwb0NvbShfcmVmKSB7XG4gIHZhciB0aXRsZSA9IF9yZWYudGl0bGUsXG4gICAgdGl0bGVJZCA9IF9yZWYudGl0bGVJZCxcbiAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBfZXhjbHVkZWQpO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX2V4dGVuZHMoe1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgeG1sU3BhY2U6IFwicHJlc2VydmVcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAzNjUgMzY1XCIsXG4gICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGl0bGVJZFxuICB9LCBwcm9wcyksIHRpdGxlID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiLCB7XG4gICAgaWQ6IHRpdGxlSWRcbiAgfSwgdGl0bGUpIDogbnVsbCwgX3BhdGggfHwgKF9wYXRoID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk03NC41IDBoNzN2MzY1aC03M3pNMjE3LjUgMGg3M3YzNjVoLTczelwiXG4gIH0pKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgU3ZnUGF1c2VTdmdyZXBvQ29tOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/images/pause-svgrepo-com.svg\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/images/play-svgrepo-com.svg":
/*!*****************************************!*\
  !*** ./app/images/play-svgrepo-com.svg ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\nvar SvgPlaySvgrepoCom = function SvgPlaySvgrepoCom(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"-3 0 28 28\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    fill: \"#000\",\n    fillRule: \"evenodd\",\n    d: \"M21.415 12.554 2.418.311C1.291-.296 0-.233 0 1.946v24.108c0 1.992 1.385 2.306 2.418 1.635l18.997-12.243a2.076 2.076 0 0 0 0-2.892\"\n  })));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (SvgPlaySvgrepoCom);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9pbWFnZXMvcGxheS1zdmdyZXBvLWNvbS5zdmciLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBLHNCQUFzQix3RUFBd0UsZ0JBQWdCLHNCQUFzQixPQUFPLHNCQUFzQixvQkFBb0IsZ0RBQWdELFdBQVc7QUFDaFAsMENBQTBDLDBCQUEwQixtREFBbUQsb0NBQW9DLHlDQUF5QyxZQUFZLGNBQWMsa0NBQWtDLHFEQUFxRDtBQUNyVCwrQ0FBK0MsMEJBQTBCLFlBQVksdUJBQXVCLDhCQUE4Qiw2QkFBNkIsZUFBZTtBQUN2SjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnREFBbUI7QUFDekM7QUFDQTtBQUNBO0FBQ0EsR0FBRywrQkFBK0IsZ0RBQW1CO0FBQ3JEO0FBQ0EsR0FBRyxnREFBZ0QsZ0RBQW1CO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLCtEQUFlLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvaW1hZ2VzL3BsYXktc3ZncmVwby1jb20uc3ZnP2FlNjYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9wYXRoO1xudmFyIF9leGNsdWRlZCA9IFtcInRpdGxlXCIsIFwidGl0bGVJZFwiXTtcbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyByZXR1cm4gX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAobikgeyBmb3IgKHZhciBlID0gMTsgZSA8IGFyZ3VtZW50cy5sZW5ndGg7IGUrKykgeyB2YXIgdCA9IGFyZ3VtZW50c1tlXTsgZm9yICh2YXIgciBpbiB0KSAoe30pLmhhc093blByb3BlcnR5LmNhbGwodCwgcikgJiYgKG5bcl0gPSB0W3JdKTsgfSByZXR1cm4gbjsgfSwgX2V4dGVuZHMuYXBwbHkobnVsbCwgYXJndW1lbnRzKTsgfVxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKGUsIHQpIHsgaWYgKG51bGwgPT0gZSkgcmV0dXJuIHt9OyB2YXIgbywgciwgaSA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKGUsIHQpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IGZvciAociA9IDA7IHIgPCBzLmxlbmd0aDsgcisrKSBvID0gc1tyXSwgdC5pbmNsdWRlcyhvKSB8fCB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsIG8pICYmIChpW29dID0gZVtvXSk7IH0gcmV0dXJuIGk7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHIsIGUpIHsgaWYgKG51bGwgPT0gcikgcmV0dXJuIHt9OyB2YXIgdCA9IHt9OyBmb3IgKHZhciBuIGluIHIpIGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsIG4pKSB7IGlmIChlLmluY2x1ZGVzKG4pKSBjb250aW51ZTsgdFtuXSA9IHJbbl07IH0gcmV0dXJuIHQ7IH1cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xudmFyIFN2Z1BsYXlTdmdyZXBvQ29tID0gZnVuY3Rpb24gU3ZnUGxheVN2Z3JlcG9Db20oX3JlZikge1xuICB2YXIgdGl0bGUgPSBfcmVmLnRpdGxlLFxuICAgIHRpdGxlSWQgPSBfcmVmLnRpdGxlSWQsXG4gICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgX2V4Y2x1ZGVkKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9leHRlbmRzKHtcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgIHZpZXdCb3g6IFwiLTMgMCAyOCAyOFwiLFxuICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRpdGxlSWRcbiAgfSwgcHJvcHMpLCB0aXRsZSA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIiwge1xuICAgIGlkOiB0aXRsZUlkXG4gIH0sIHRpdGxlKSA6IG51bGwsIF9wYXRoIHx8IChfcGF0aCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZmlsbDogXCIjMDAwXCIsXG4gICAgZmlsbFJ1bGU6IFwiZXZlbm9kZFwiLFxuICAgIGQ6IFwiTTIxLjQxNSAxMi41NTQgMi40MTguMzExQzEuMjkxLS4yOTYgMC0uMjMzIDAgMS45NDZ2MjQuMTA4YzAgMS45OTIgMS4zODUgMi4zMDYgMi40MTggMS42MzVsMTguOTk3LTEyLjI0M2EyLjA3NiAyLjA3NiAwIDAgMCAwLTIuODkyXCJcbiAgfSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBTdmdQbGF5U3ZncmVwb0NvbTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/images/play-svgrepo-com.svg\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fsarah%2Fworkspace%2Fsj-personal-homepage%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fsarah%2Fworkspace%2Fsj-personal-homepage%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZzYXJhaCUyRndvcmtzcGFjZSUyRnNqLXBlcnNvbmFsLWhvbWVwYWdlJTJGYXBwJTJGcGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSxzSkFBNkYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz9hZmJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3NhcmFoL3dvcmtzcGFjZS9zai1wZXJzb25hbC1ob21lcGFnZS9hcHAvcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fsarah%2Fworkspace%2Fsj-personal-homepage%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.3.1';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.act = act;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react/cjs/react.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"(app-pages-browser)/./node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsMklBQXNEO0FBQ3hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcz80NGQyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _images_gear_svgrepo_com_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./images/gear-svgrepo-com.svg */ \"(app-pages-browser)/./app/images/gear-svgrepo-com.svg\");\n/* harmony import */ var _images_close_svgrepo_com_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./images/close-svgrepo-com.svg */ \"(app-pages-browser)/./app/images/close-svgrepo-com.svg\");\n/* harmony import */ var _images_pause_svgrepo_com_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./images/pause-svgrepo-com.svg */ \"(app-pages-browser)/./app/images/pause-svgrepo-com.svg\");\n/* harmony import */ var _images_play_svgrepo_com_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./images/play-svgrepo-com.svg */ \"(app-pages-browser)/./app/images/play-svgrepo-com.svg\");\n/* harmony import */ var _images_github_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./images/github.svg */ \"(app-pages-browser)/./app/images/github.svg\");\n/* harmony import */ var _images_linkedin_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./images/linkedin.svg */ \"(app-pages-browser)/./app/images/linkedin.svg\");\n/* harmony import */ var _images_logo_desktop_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./images/logo-desktop.svg */ \"(app-pages-browser)/./app/images/logo-desktop.svg\");\n/* harmony import */ var _images_logo_mobile_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./images/logo-mobile.svg */ \"(app-pages-browser)/./app/images/logo-mobile.svg\");\n/* harmony import */ var _images_bluesky_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./images/bluesky.svg */ \"(app-pages-browser)/./app/images/bluesky.svg\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\n\n\nfunction Header() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n        id: \"header\",\n        className: \"fixed header w-full p-4 z-10\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n            className: \"flex flex-row justify-between py-2 px-2\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TextBubbles, {}, void 0, false, {\n                    fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                    lineNumber: 17,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"header-icons flex space-x-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                            title: \"LinkedIn\",\n                            className: \"header-icon w-8 h-8 p-1 fill-neutral-900 bg-neutral-100 hover:scale-110 active:scale-110 transition duration-150 rounded shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] border-solid border-2 border-neutral-800\",\n                            href: \"https://www.linkedin.com/in/sarah-c-jacques/\",\n                            target: \"_\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_images_linkedin_svg__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                lineNumber: 20,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                            lineNumber: 19,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                            title: \"Bluesky\",\n                            className: \"header-icon w-8 h-8 p-1 fill-neutral-900 bg-neutral-100 hover:scale-110 active:scale-110 transition duration-150 rounded shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] border-solid border-2 border-neutral-800\",\n                            href: \"https://bsky.app/\",\n                            target: \"_\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_images_bluesky_svg__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                lineNumber: 23,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                            lineNumber: 22,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                            title: \"Github\",\n                            className: \"header-icon w-8 h-8 p-1 fill-neutral-900 bg-neutral-100 hover:scale-110 active:scale-110 transition duration-150 rounded shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] border-solid border-2 border-neutral-800\",\n                            href: \"https://github.com/crystal-hearts/\",\n                            target: \"_\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_images_github_svg__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                lineNumber: 26,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                            lineNumber: 25,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                    lineNumber: 18,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n            lineNumber: 16,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, this);\n}\n_c = Header;\nfunction Footer() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n        id: \"footer\",\n        className: \"fixed footer bottom-0 left-0 w-full p-4 z-10\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n            className: \"flex flex-row justify-between py-2 px-2\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"header-icons flex space-x-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"header-icon w-8 h-8 p-1 fill-neutral-900 bg-neutral-100 hover:scale-110 active:scale-110 transition duration-150 rounded shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] border-solid border-2 border-neutral-800\",\n                        onClick: ()=>openModal(\"settings-modal\"),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_images_gear_svgrepo_com_svg__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                            lineNumber: 40,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                        lineNumber: 39,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        id: \"pause-button\",\n                        title: \"Pause animations\",\n                        className: \"pause-button w-8 h-8 p-1 fill-neutral-900 bg-neutral-100 hover:scale-110 active:scale-110 transition duration-150 rounded shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] border-solid border-2 border-neutral-800\",\n                        onClick: ()=>handlePauseButton(\"paused\"),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_images_pause_svgrepo_com_svg__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                            lineNumber: 43,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                        lineNumber: 42,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        id: \"play-button\",\n                        title: \"Play animations\",\n                        className: \"play-button w-8 h-8 p-1 fill-neutral-900 bg-neutral-100 hover:scale-110 active:scale-110 transition duration-150 rounded shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] border-solid border-2 border-neutral-800\",\n                        onClick: ()=>handlePlayButton(\"running\"),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_images_play_svgrepo_com_svg__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                            lineNumber: 46,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                lineNumber: 38,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n            lineNumber: 37,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n        lineNumber: 36,\n        columnNumber: 5\n    }, this);\n}\n_c1 = Footer;\nfunction TextBubbles() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"text-bubbles flex flex-row text-neutral-900 text-sm font-[family-name:var(--font-rubik)] font-black\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"text-bubble mr-2 px-2 py-1 text-center rounded bg-neutral-100 shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] bg-neutral-100 border-solid border-2 border-neutral-800 hover:scale-110 active:scale-105 transition duration-150\",\n                onClick: ()=>rotatePageThemeColor(),\n                children: \"about me\"\n            }, void 0, false, {\n                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                lineNumber: 57,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"text-bubble mr-2 px-2 py-1 text-center rounded bg-neutral-100 shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] bg-neutral-100 border-solid border-2 border-neutral-800 hover:scale-110 active:scale-105 transition duration-150\",\n                onClick: ()=>rotatePageThemeColor(),\n                children: \"contact\"\n            }, void 0, false, {\n                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                lineNumber: 60,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"text-bubble mr-2 px-2 py-1 text-center rounded bg-neutral-100 shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] bg-neutral-100 border-solid border-2 border-neutral-800 hover:scale-110 active:scale-105 transition duration-150\",\n                onClick: ()=>rotatePageThemeColor(),\n                children: \"about my cat\"\n            }, void 0, false, {\n                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                lineNumber: 63,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n        lineNumber: 56,\n        columnNumber: 5\n    }, this);\n}\n_c2 = TextBubbles;\nfunction rotatePageThemeColor() {\n    var pageThemeColorElements = document.querySelectorAll(\"[data-bg-color-value]\");\n    var colorValue = pageThemeColorElements[0].getAttribute(\"data-bg-color-value\");\n    colorValue = colorValue ? ((parseInt(colorValue) + 1) % 4).toString() : \"0\";\n    colorValue ? document.querySelectorAll(\"[data-bg-color-value]\").forEach((element)=>{\n        element.setAttribute(\"data-bg-color-value\", colorValue);\n    }) : null;\n}\nfunction handlePlayButton(animationPlayState) {\n    var playButton = document.getElementById(\"play-button\");\n    var pauseButton = document.getElementById(\"pause-button\");\n    playButton ? playButton.style.display = \"none\" : playButton;\n    pauseButton ? pauseButton.style.display = \"block\" : pauseButton;\n    pauseButton ? pauseButton.focus() : null;\n    toggleAnimations(animationPlayState);\n}\nfunction handlePauseButton(animationPlayState) {\n    var playButton = document.getElementById(\"play-button\");\n    var pauseButton = document.getElementById(\"pause-button\");\n    playButton ? playButton.style.display = \"block\" : playButton;\n    pauseButton ? pauseButton.style.display = \"none\" : pauseButton;\n    playButton ? playButton.focus() : null;\n    toggleAnimations(animationPlayState);\n}\nfunction toggleAnimations(playState) {\n    document.querySelectorAll(\"[data-animation-play-state]\").forEach((element)=>{\n        element.setAttribute(\"data-animation-play-state\", playState);\n    });\n}\nfunction openModal(modalID) {\n    var settingsModalElement = document.getElementById(modalID);\n    settingsModalElement ? settingsModalElement.setAttribute(\"data-modal-active\", \"open\") : null;\n    settingsModalElement ? settingsModalElement.getElementsByClassName(\"modal-heading\")[0].focus() : null;\n}\nfunction closeModal(modalID) {\n    var settingsModalElement = document.getElementById(modalID);\n    settingsModalElement ? settingsModalElement.setAttribute(\"data-modal-active\", \"closed\") : null;\n}\nfunction Home() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        id: \"page\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"background\",\n                className: \"background fixed w-full min-h-screen pb-10\",\n                \"data-bg-color-value\": \"0\"\n            }, void 0, false, {\n                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                lineNumber: 120,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"scrolling-bg\",\n                className: \"scrolling-bg fixed w-full h-full border-solid border-8 border-neutral-100 opacity-20\",\n                \"data-animation-play-state\": \"running\"\n            }, void 0, false, {\n                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                lineNumber: 121,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Header, {}, void 0, false, {\n                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                lineNumber: 122,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"relative w-full\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"section-container flex flex-row w-full min-h-48 items-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"section-contents flex flex-col items-center mx-auto\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"logo logo-desktop hidden sm:block mt-20\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_images_logo_desktop_svg__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                            lineNumber: 128,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                        lineNumber: 127,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"logo logo-mobile block sm:hidden mt-20\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_images_logo_mobile_svg__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {}, void 0, false, {\n                                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                            lineNumber: 131,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                        lineNumber: 130,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                lineNumber: 126,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                            lineNumber: 125,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                        lineNumber: 124,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        id: \"settings-modal\",\n                        className: \"settings-modal fixed z-20 top-full w-2/4 left-1/4 h-36 transition-transform duration-500 rounded-2xl bg-neutral-100 shadow-[rgba(0,0,0.5,0.5)_5px_5px_5px_0px] border-solid border-2 border-neutral-800\",\n                        \"data-modal-active\": \"closed\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"modal-contents flex flex-col\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"modal-header flex rounded-t-xl border-solid border-b-2 border-neutral-800\",\n                                    \"data-bg-color-value\": \"0\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                            className: \"modal-heading px-2 py-1 text-neutral-100 text-sm font-[family-name:var(--font-rubik)] font-bold\",\n                                            tabindex: \"-1\",\n                                            children: \"site flavour\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                            lineNumber: 139,\n                                            columnNumber: 13\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            className: \"modal-close w-4 h-4 fill-neutral-200\",\n                                            onClick: ()=>closeModal(\"settings-modal\"),\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_images_close_svgrepo_com_svg__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                                                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                                lineNumber: 141,\n                                                columnNumber: 17\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                            lineNumber: 140,\n                                            columnNumber: 13\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                    lineNumber: 138,\n                                    columnNumber: 11\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"modal-contents h-full\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                                    lineNumber: 144,\n                                    columnNumber: 11\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                            lineNumber: 137,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                        lineNumber: 136,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                lineNumber: 123,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Footer, {}, void 0, false, {\n                fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n                lineNumber: 149,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/sarah/workspace/sj-personal-homepage/app/page.tsx\",\n        lineNumber: 119,\n        columnNumber: 5\n    }, this);\n}\n_c3 = Home;\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c1, \"Footer\");\n$RefreshReg$(_c2, \"TextBubbles\");\n$RefreshReg$(_c3, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/NGNjZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fsarah%2Fworkspace%2Fsj-personal-homepage%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);